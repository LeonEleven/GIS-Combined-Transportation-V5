<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.8.4.202307131110" AlpVersion="8.8.2">
<Model>
	<Id>1685604887146</Id>
	<Name><![CDATA[GIS-Combined-Transportation-V5]]></Name>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[gis_combined_transportation_v4]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Minute]]></ModelTimeUnit>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1685604887149</Id>
			<Name><![CDATA[Main]]></Name>
			<Import><![CDATA[import java.awt.Rectangle;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;]]></Import>
			<StartupCode><![CDATA[initAll();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1685604887155</Id>
				<Name><![CDATA[1685604887155]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>GIS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1685606400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1685604887152</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1685604887156</CurrentLevel>
			<ConnectionsId>1685604887150</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1685936287158</Id>
					<Name><![CDATA[customer_random]]></Name>
					<X>-140</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Random]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686033978666</Id>
					<Name><![CDATA[EARTH_RADIUS]]></Name>
					<X>-440</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[6378137]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686034022035</Id>
					<Name><![CDATA[DEGREE_TO_RADIAN]]></Name>
					<X>-440</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[Math.PI / 180.0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686034038781</Id>
					<Name><![CDATA[RADIAN_TO_DEGREE]]></Name>
					<X>-440</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[180.0 / Math.PI]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686124442248</Id>
					<Name><![CDATA[Rab]]></Name>
					<X>-440</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[27000.00]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686204261588</Id>
					<Name><![CDATA[Rc]]></Name>
					<X>-440</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[16000.00]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686728715013</Id>
					<Name><![CDATA[testOrderNumber]]></Name>
					<X>-640</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686728742665</Id>
					<Name><![CDATA[timeInterval]]></Name>
					<X>-640</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[fullDayOrderNumber / fullDayTime / 60 / 60]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689579719453</Id>
					<Name><![CDATA[radius_A]]></Name>
					<X>-640</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[6500]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689579757341</Id>
					<Name><![CDATA[radius_B]]></Name>
					<X>-640</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[9500]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689579764493</Id>
					<Name><![CDATA[radius_C]]></Name>
					<X>-640</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[18000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689661361097</Id>
					<Name><![CDATA[dailyWages]]></Name>
					<Description><![CDATA[司机人工费]]></Description>
					<X>-640</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[800]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689661482090</Id>
					<Name><![CDATA[truckCost]]></Name>
					<Description><![CDATA[车辆成本]]></Description>
					<X>-640</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[300000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689661559859</Id>
					<Name><![CDATA[distanceEnergyConsumption]]></Name>
					<Description><![CDATA[行驶运营费率]]></Description>
					<X>-640</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.5]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689661821726</Id>
					<Name><![CDATA[laborRate]]></Name>
					<Description><![CDATA[人工费率]]></Description>
					<X>-640</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.03]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689662027545</Id>
					<Name><![CDATA[depreciationRate]]></Name>
					<X>-640</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689662511071</Id>
					<Name><![CDATA[fullDayOrderNumber]]></Name>
					<X>-640</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[100000]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689662548936</Id>
					<Name><![CDATA[fullDayTime]]></Name>
					<X>-640</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[8]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689835668382</Id>
					<Name><![CDATA[startFlag]]></Name>
					<Description><![CDATA[是否点击启动按钮]]></Description>
					<X>-640</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691116436248</Id>
					<Name><![CDATA[truckPosition]]></Name>
					<X>-640</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[360]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691551545861</Id>
					<Name><![CDATA[truckType0Multiplier]]></Name>
					<X>-140</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691551580968</Id>
					<Name><![CDATA[truckType1Multiplier]]></Name>
					<X>-140</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691551620676</Id>
					<Name><![CDATA[truckType2Multiplier]]></Name>
					<X>-140</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691994598058</Id>
					<Name><![CDATA[supermarket_new_coordinate]]></Name>
					<X>-640</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1691994598060</Id>
					<Name><![CDATA[customer_new_coordinate]]></Name>
					<X>-640</X><Y>640</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692167007709</Id>
					<Name><![CDATA[area27TruckMultiplier]]></Name>
					<X>-140</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[truckType2Multiplier]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692342991167</Id>
					<Name><![CDATA[orderCompleteNum]]></Name>
					<X>910</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1685946576974</Id>
					<Name><![CDATA[customer_probabilities]]></Name>
					<X>-140</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Double]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1685953866331</Id>
					<Name><![CDATA[deliveryOrderList]]></Name>
					<X>-140</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[DeliveryOrder]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1691549484693</Id>
					<Name><![CDATA[truckTemplateType0List]]></Name>
					<X>-150</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Truck]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1691550390845</Id>
					<Name><![CDATA[truckTemplateType1List]]></Name>
					<X>-150</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Truck]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1691550903394</Id>
					<Name><![CDATA[truckTemplateType2List]]></Name>
					<X>-150</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Truck]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1691994763897</Id>
					<Name><![CDATA[area_new_coordinate_list]]></Name>
					<X>-640</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[double[]]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1686018971404</Id>
					<Name><![CDATA[startGeneratingOrders]]></Name>
					<X>710</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="rate" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[timeInterval]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_SECOND]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1686038400000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MILLISECOND]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[timeInterval]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MILLISECOND]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[if (deliveryOrderList.size() < testOrderNumber) {
	selectCustomer();
} else {
	startGeneratingOrders.reset();
}]]></Action>
				</Event>
				<Event>
					<Id>1687767760922</Id>
					<Name><![CDATA[stopSimulation]]></Name>
					<X>910</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1687852800000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[false]]></Condition>
					</Properties>
					<Action><![CDATA[boolean stopFlag = true;
int num = 0;
for (DeliveryOrder order : deliveryOrderList) {
	if (order.state != 3) {
		stopFlag = false;
	} else if (order.state == 3) {
		num++;
	}
}
if (orderCompleteNum < num) {
	orderCompleteNum = num;
}
if (deliveryOrderList.size() == testOrderNumber && stopFlag) {
	writeExcel();
	System.out.println("last order finash");
	this.stopSimulation();
}]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1685935983019</Id>
					<Name><![CDATA[customerRandom]]></Name>
					<X>-140</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double[] cumulativeProbabilities = new double[customer_probabilities.size()];
double cumulativeProbability = 0.0;
for (int i = 0; i < customer_probabilities.size(); i++) {
	cumulativeProbability += customer_probabilities.get(i);
	cumulativeProbabilities[i] = cumulativeProbability;
}
double randomValue = customer_random.nextDouble() * cumulativeProbability;

for (int i = 0; i < cumulativeProbabilities.length; i++) {
	if (randomValue <= cumulativeProbabilities[i]) {
		return i;
	}
}

// 如果循环完成而没有返回值，则选择最后一项作为默认选项
return customer_probabilities.size() - 1;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1685946403616</Id>
					<Name><![CDATA[initCustomerRandom]]></Name>
					<X>-140</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[customer_random = new Random();
customer_probabilities = new ArrayList<>();
// 遍历对象数组
for (int i = 0; i < customer.size(); i++) {
	customer_probabilities.add(customer.get(i).getParameter("probability"));
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1685948852948</Id>
					<Name><![CDATA[selectCustomer]]></Name>
					<X>-140</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int customerId = customerRandom();
// TODO:生成订单
customer.get(customerId).generateOrder();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1685953935294</Id>
					<Name><![CDATA[initAll]]></Name>
					<X>-140</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[startGeneratingOrders.reset();
stopSimulation.suspend();
// 初始化订单列表
deliveryOrderList = new ArrayList<DeliveryOrder>();
// 初始化随机客户
initCustomerRandom();
// 初始化摩卡托投影坐标
initMercator();
// 初始化货车模板
initTruckTemplate();
// 初始化货车
initTruck();
// 初始化area车队列表
initAreaTruckList();
// 配置车辆
initAreaAndTruckRadius();
// 配置参数
initParam();
// 创建excel
createExcel();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686033612557</Id>
					<Name><![CDATA[lonLatToMercator]]></Name>
					<X>-440</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[lon]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[lat]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double x = lon * DEGREE_TO_RADIAN * EARTH_RADIUS;
double y = Math.log(Math.tan((90.0 + lat) * DEGREE_TO_RADIAN / 2.0)) / DEGREE_TO_RADIAN * EARTH_RADIUS * DEGREE_TO_RADIAN;
return new double[]{x, y};
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1686034151827</Id>
					<Name><![CDATA[initMercator]]></Name>
					<X>-140</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// supermarket_mercator
for (int i = 0; i < supermarket.size(); i++) {
	supermarket.get(i).supermarket_mercator = lonLatToMercator(supermarket.get(i).getLongitude(), supermarket.get(i).getLatitude());
}
// customer_mercator
for (int i = 0; i < customer.size(); i++) {
	customer.get(i).customer_mercator = lonLatToMercator(customer.get(i).getLongitude(), customer.get(i).getLatitude());
}
// area_mercator
for (int i = 0; i < area.size(); i++) {
	area.get(i).area_mercator = lonLatToMercator(area.get(i).longitude, area.get(i).latitude);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686034769625</Id>
					<Name><![CDATA[mercatorToLonLat]]></Name>
					<X>-440</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[mercator]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[double lon = mercator[0] / EARTH_RADIUS * RADIAN_TO_DEGREE;
double lat = Math.toDegrees(Math.atan(Math.exp(mercator[1] / EARTH_RADIUS)));
lat = Math.toDegrees(2 * Math.atan(Math.exp(mercator[1] / EARTH_RADIUS)) - Math.PI / 2);
return new double[]{lon, lat};]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686034952327</Id>
					<Name><![CDATA[transformCoordinates]]></Name>
					<X>-440</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[C]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[// 创建一个数组来存储结果
double[] result = new double[2];

// 计算AB向量与X轴的夹角，单位为弧度
double angle = Math.atan2(B[1] - A[1], B[0] - A[0]);

// 对C点进行平移变换，使A点成为原点
double x = C[0] - A[0];
double y = C[1] - A[1];

// 对C点进行旋转变换，使AB向量与X轴重合
double xNew = x * Math.cos(angle) + y * Math.sin(angle);
double yNew = y * Math.cos(angle) - x * Math.sin(angle);

// 将结果存入数组，并设置小数位数和舍入方式
result[0] = Math.round(xNew * 1e6) / 1e6;
result[1] = Math.round(yNew * 1e6) / 1e6;

// 返回结果
return result;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686036442612</Id>
					<Name><![CDATA[reverseTransformCoordinates]]></Name>
					<X>-440</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[New]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[// 创建一个数组来存储结果
double[] result = new double[2];

// 计算AB向量与X轴的夹角，单位为弧度
double angle = Math.atan2(B[1] - A[1], B[0] - A[0]);

// 对D点进行逆旋转变换
double x = New[0] * Math.cos(angle) - New[1] * Math.sin(angle);
double y = New[1] * Math.cos(angle) + New[0] * Math.sin(angle);

// 对D点进行逆平移变换，使A点成为原点
result[0] = x + A[0];
result[1] = y + A[1];

// 返回结果
return result;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1686036773653</Id>
					<Name><![CDATA[mercatorDistance]]></Name>
					<X>-440</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[p1]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[p2]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[/**
 * 一个工具方法，用于计算两个墨卡托坐标之间的欧几里得距离
 *
 * @param p1
 *            第一个墨卡托坐标 [x, y]
 * @param p2
 *            第二个墨卡托坐标 [x, y]
 * @return 欧几里得距离
 */
double dx = p1[0] - p2[0];
double dy = p1[1] - p2[1];
return Math.sqrt(dx * dx + dy * dy);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686036920537</Id>
					<Name><![CDATA[findOptimalMercatorCoordinate]]></Name>
					<Description><![CDATA[用于找到三个给定坐标 A、B 和 C 的最优坐标]]></Description>
					<X>-440</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[C]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[// 初始化最优坐标为三个给定坐标的平均值
double[] optimal = new double[2];
optimal[0] = (A[0] + B[0] + C[0]) / 3.0;
optimal[1] = (A[1] + B[1] + C[1]) / 3.0;

// 初始化最小距离之和为平均坐标到三个给定坐标的距离之和
double minSum = mercatorDistance(optimal, A) + mercatorDistance(optimal, B) + mercatorDistance(optimal, C);

// 初始化一个小的步长，用于移动最优坐标
double step = 0.01;

// 初始化一个标志，用于指示是否有改进
boolean improved = true;

// 重复直到没有改进为止
while (improved) {
	// 重置标志
	improved = false;

	// 尝试将最优坐标在八个方向上移动：北、南、东、西、东北、西北、东南、西南
	for (int i = -1; i <= 1; i++) {
		for (int j = -1; j <= 1; j++) {

			// 跳过i和j都为零的情况（无移动）
			if (i == 0 && j == 0)
				continue;

			// 创建一个新的坐标，通过在一个方向上移动最优坐标一个小步长
			double[] newCoordinate = new double[2];
			newCoordinate[0] = optimal[0] + step * i;
			newCoordinate[1] = optimal[1] + step * j;

			// 计算新坐标到三个给定坐标的距离之和
			double newSum = mercatorDistance(newCoordinate, A) + mercatorDistance(newCoordinate, B) + mercatorDistance(newCoordinate, C);

			// 如果新的距离之和小于最小距离之和，更新最优坐标和最小距离之和，并将标志设为真
			if (newSum < minSum) {
				optimal = newCoordinate;
				minSum = newSum;
				improved = true;
			}
		}
	}

	// 将步长减半
	step /= 2.0;
}

// 返回最优坐标
return optimal;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[int[]]]></ReturnType>
					<Id>1686037466053</Id>
					<Name><![CDATA[checkPointsInsideRectangle]]></Name>
					<X>-440</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[C]]></Name>
						<Type><![CDATA[ArrayList<double[]>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[Rab]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// 定义一个数组，用来存储在长方形区域内的C点列表的下标
int[] result = new int[C.size()];

// 定义一个变量，用来记录结果数组的长度
int count = 0;

// 根据AB点和Rab值创建一个Rectangle对象
Rectangle rectangle = new Rectangle();
rectangle.setFrameFromDiagonal(A[0], A[1] + Rab, B[0], B[1] - Rab);

// 遍历C点列表
for (int i = 0; i < C.size(); i++) {

	// 调用contains方法检查C点是否在长方形区域内
	if (rectangle.contains(C.get(i)[0], C.get(i)[1])) {

		// 如果是，说明C点在长方形区域内，将其下标加入结果数组，并增加结果数组的长度
		result[count] = i;
		count++;
	}
}

// 返回结果数组
return Arrays.copyOf(result, count);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<double[]>]]></ReturnType>
					<Id>1686038469748</Id>
					<Name><![CDATA[circleLineIntersection]]></Name>
					<X>-440</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[C]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[i]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[Rc]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// 计算AB线段的斜率和截距
double slope = (B[1] - A[1]) / (B[0] - A[0]);
double intercept = A[1] - slope * A[0];
// 计算圆心C到AB线段的垂直距离
double distance = Math.abs(slope * C[0] - C[1] + intercept) / Math.sqrt(slope * slope + 1);
// 定义一个列表来存储相交点
ArrayList<double[]> intersections = new ArrayList<>();

// 判断垂直距离是否小于或等于圆的半径
if (distance <= Rc) {
	// 计算圆心C到AB线段的最近点的坐标
	double x0 = (slope * C[1] + C[0] - slope * intercept) / (slope * slope + 1);
	double y0 = slope * x0 + intercept;
	// 判断垂直距离是否等于圆的半径，即最近点是否在圆上
	if (distance == Rc) {
		// 如果最近点在圆上，那么它就是唯一的相交点
		// 判断最近点是否在AB线段上
		// if (inRange(new double[] { x0, y0 }, A, B)) {
		// // 如果最近点在AB线段上，那么将它添加到相交点列表中
		// intersections.add(new double[] { x0, y0 });
		// }
		if (C[0] >= Math.min(A[0], B[0]) && C[0] <= Math.max(A[0], B[0])) {
			// 如果最近点在AB线段上，那么将它添加到相交点列表中
			intersections.add(new double[]{C[0], C[1], i});
		}
	} else {
		// 如果垂直距离小于圆的半径，那么有两个相交点
		// 计算相交点到最近点的距离
		double d = Math.sqrt(Rc * Rc - distance * distance);
		// 计算两个相交点的坐标
		double x1 = x0 + d * (B[0] - A[0]) / Math.sqrt((A[0] - B[0]) * (A[0] - B[0]) + (A[1] - B[1]) * (A[1] - B[1]));
		double y1 = y0 + d * (B[1] - A[1]) / Math.sqrt((A[0] - B[0]) * (A[0] - B[0]) + (A[1] - B[1]) * (A[1] - B[1]));
		double x2 = x0 - d * (B[0] - A[0]) / Math.sqrt((A[0] - B[0]) * (A[0] - B[0]) + (A[1] - B[1]) * (A[1] - B[1]));
		double y2 = y0 - d * (B[1] - A[1]) / Math.sqrt((A[0] - B[0]) * (A[0] - B[0]) + (A[1] - B[1]) * (A[1] - B[1]));

		// // 判断两个相交点是否在AB线段上
		if (x1 < Math.min(A[0], B[0])) {
			x1 = 0.0;
			System.out.println(x1);
		} else if (x1 > Math.max(A[0], B[0])) {
			x1 = Math.max(A[0], B[0]);
		}
		if (x2 < Math.min(A[0], B[0])) {
			x2 = 0.0;
		} else if (x2 > Math.max(A[0], B[0])) {
			x2 = Math.max(A[0], B[0]);
		}
		if (x1 < x2) {
			intersections.add(new double[]{x1, y1, i});
			intersections.add(new double[]{x2, y2, i});
		} else if (x1 > x2) {
			intersections.add(new double[]{x2, y2, i});
			intersections.add(new double[]{x1, y1, i});
		}
	}
}

// 返回相交点列表作为结果
return intersections;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<double[]>]]></ReturnType>
					<Id>1686206596154</Id>
					<Name><![CDATA[removeOverlappingIntervals]]></Name>
					<Description><![CDATA[删除重叠的区间]]></Description>
					<X>-440</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[intervals]]></Name>
						<Type><![CDATA[ArrayList<double[]>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[L_origin]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[// 计算区间列表的并集长度
double L_max = calculateUnion(intervals);

// 如果并集长度大于初始长度，则返回 null
if (L_max > L_origin) {
	return null;
}

// 创建一个新的列表，复制原始区间列表，并按照第三个元素进行升序排序
ArrayList<double[]> sortedIntervals = new ArrayList<>(intervals);
Collections.sort(sortedIntervals, (a, b) -> Double.compare(a[2], b[2]));

// 遍历排序后的区间列表
for (int i = 0; i < sortedIntervals.size(); i++) {
	// 获取当前要移除的区间
	double[] intervalToRemove = sortedIntervals.get(i);

	// 创建一个新的列表，复制原始区间列表
	ArrayList<double[]> remainingIntervals = new ArrayList<>(intervals);

	// 从剩余区间列表中移除当前区间
	remainingIntervals.remove(intervalToRemove);

	// 计算剩余区间列表的并集长度
	double L_rest = calculateUnion(remainingIntervals);

	// 如果剩余区间列表的并集长度与最大并集长度相等
	if (Double.compare(L_max, L_rest) == 0) {
		// 更新区间列表为剩余区间列表
		intervals = remainingIntervals;
	}
}

// 返回更新后的区间列表
return intervals;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1686206653525</Id>
					<Name><![CDATA[calculateUnion]]></Name>
					<Description><![CDATA[用于计算一组区间并集长度]]></Description>
					<X>-440</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[intervals]]></Name>
						<Type><![CDATA[ArrayList<double[]>]]></Type>
					</Parameter>
					<Body><![CDATA[// 初始化并集长度为0
double L_union = 0.0;

// 如果区间列表不为空
if (intervals.size() > 0) {
	// 创建一个新的列表，复制原始区间列表，并按照起始值进行升序排序
	ArrayList<double[]> sortedIntervals = new ArrayList<>(intervals);
	Collections.sort(sortedIntervals, (a, b) -> Double.compare(a[0], b[0]));

	// 初始化当前区间的起始值和结束值为第一个区间的起始值和结束值
	double currentStart = sortedIntervals.get(0)[0];
	double currentEnd = sortedIntervals.get(0)[1];

	// 遍历排序后的区间列表
	for (int i = 1; i < sortedIntervals.size(); i++) {
		// 获取下一个区间
		double[] nextInterval = sortedIntervals.get(i);

		// 如果下一个区间的起始值小于等于当前区间的结束值，表示两个区间有重叠
		if (nextInterval[0] <= currentEnd) {
			// 更新当前区间的结束值为两者中的较大值
			currentEnd = Math.max(currentEnd, nextInterval[1]);
		} else {
			// 如果下一个区间与当前区间没有重叠
			// 计算并累加当前区间的长度到总长度
			L_union += currentEnd - currentStart;

			// 更新当前区间的起始值和结束值为下一个区间的起始值和结束值
			currentStart = nextInterval[0];
			currentEnd = nextInterval[1];
		}
	}

	// 处理最后一个区间
	// 计算并累加最后一个区间的长度到总长度
	L_union += currentEnd - currentStart;
}

// 返回计算得到的总长度
return L_union;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<double[]>]]></ReturnType>
					<Id>1686207381821</Id>
					<Name><![CDATA[findJunctionPoint]]></Name>
					<Description><![CDATA[寻找交接点]]></Description>
					<X>-440</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[businesspoint]]></Name>
						<Type><![CDATA[ArrayList<double[]>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[intervals]]></Name>
						<Type><![CDATA[ArrayList<double[]>]]></Type>
					</Parameter>
					<Body><![CDATA[// 创建一个新的列表，用于存储结果
ArrayList<double[]> result = new ArrayList<>();

// 按照第一个元素进行升序排序
Collections.sort(businesspoint, (a, b) -> Double.compare(a[0], b[0]));

// 需要找到的交接点数量
int pointNum = intervals.size() - 1;

// 如果交接点数量小于等于0，则直接返回空结果
if (pointNum <= 0) {
	return result;
}

// 起始点设置为A
double[] startPoint = {A[0], A[1]};

// 遍历交接点数量
for (int i = 0; i < pointNum; i++) {
	// 获取当前区间和下一个区间
	double[] interval1 = intervals.get(i);
	double[] interval2 = intervals.get(i + 1);

	// 获取区间的x坐标
	double x1 = interval1[0];
	double x2 = interval1[2];
	double x3 = interval2[0];
	double x4 = interval2[2];

	// 初始化交叉区间的起始值和结束值
	double intersectionStart, intersectionEnd;

	// 判断交叉区间的起始值和结束值
	if (x3 > x2) {
		intersectionStart = x1;
		intersectionEnd = x4;

		// 在交叉区间内查找交接点
		double[] point = intersectFindPoint(intersectionStart, intersectionEnd, startPoint, businesspoint.get(i + 1));

		// 将找到的交接点添加到结果列表中
		result.add(point);

		// 更新起始点为找到的交接点
		startPoint = point;
	} else {
		intersectionStart = x3;
		intersectionEnd = x2;

		// 在交叉区间内查找交接点
		double[] point = intersectFindPoint(intersectionStart, intersectionEnd, startPoint, businesspoint.get(i + 1));

		// 将找到的交接点添加到结果列表中
		result.add(point);

		// 更新起始点为找到的交接点
		startPoint = point;
	}
}

// 返回结果列表
return result;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1686207512354</Id>
					<Name><![CDATA[intersectFindPoint]]></Name>
					<Description><![CDATA[这段代码在指定的 x 轴范围内枚举坐标，并计算坐标 C 到 A 点和 B 点的距离差值，然后找到距离差值最小的坐标 C。]]></Description>
					<X>-440</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[intersectionStart]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[intersectionEnd]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[// 初始化最小距离差值为无穷大
double minDiff = Double.MAX_VALUE;
// 初始化C点坐标为null
double[] pointC = null;
// 在intersectionStart和intersectionEnd之间枚举x轴坐标
for (double x = intersectionStart; x <= intersectionEnd; x++) {
	// 创建当前x轴坐标下的坐标C
	double[] pointCand = {x, 0.0};
	// 计算C点到A点和B点的距离
	double distanceAC = newCoordinateDistance(pointCand, A);
	double distanceBC = newCoordinateDistance(pointCand, B);
	// 计算距离差值的绝对值
	double diff = Math.abs(distanceAC - distanceBC);
	// 如果当前差值比最小差值小，则更新最小差值和C点坐标
	if (diff < minDiff) {
		minDiff = diff;
		pointC = pointCand;
	}
}
// 返回C点坐标
return pointC;
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1686207626615</Id>
					<Name><![CDATA[newCoordinateDistance]]></Name>
					<Description><![CDATA[计算了两个点 A 和 B 之间的欧几里得距离]]></Description>
					<X>-440</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[A]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[B]]></Name>
						<Type><![CDATA[double[]]]></Type>
					</Parameter>
					<Body><![CDATA[// 计算 x 坐标的差值
double dx = B[0] - A[0];

// 计算 y 坐标的差值
double dy = B[1] - A[1];

// 计算两点之间的距离，即欧几里得距离
return Math.sqrt(dx * dx + dy * dy);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1686724620060</Id>
					<Name><![CDATA[createExcel]]></Name>
					<X>-140</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// order
result_excelFile.setCellValue("订单Id", 1, 1, 1);
result_excelFile.setCellValue("超市Id", 1, 1, 2);
result_excelFile.setCellValue("顾客Id", 1, 1, 3);
result_excelFile.setCellValue("相对距离（米）", 1, 1, 4);
result_excelFile.setCellValue("累计行驶里程（米）", 1, 1, 5);
result_excelFile.setCellValue("订单开始时刻", 1, 1, 6);
result_excelFile.setCellValue("订单结束时刻", 1, 1, 7);
result_excelFile.setCellValue("累计耗时（分钟）", 1, 1, 8);
result_excelFile.setCellValue("总成本（元）", 1, 1, 9);
result_excelFile.setCellValue("状态", 1, 1, 10);

result_excelFile.setCellValue("订单Id", 2, 1, 1);
result_excelFile.setCellValue("任务次序", 2, 1, 2);
result_excelFile.setCellValue("超市Id", 2, 1, 3);
result_excelFile.setCellValue("顾客Id", 2, 1, 4);
result_excelFile.setCellValue("当前区域Id", 2, 1, 5);
result_excelFile.setCellValue("当前车Id", 2, 1, 6);
result_excelFile.setCellValue("类型", 2, 1, 7);
result_excelFile.setCellValue("状态", 2, 1, 8);
result_excelFile.setCellValue("开始时刻", 2, 1, 9);
result_excelFile.setCellValue("结束时刻", 2, 1, 10);
result_excelFile.setCellValue("货是否在车上", 2, 1, 11);

result_excelFile.setCellValue("区域Id", 3, 1, 1);
result_excelFile.setCellValue("区", 3, 1, 2);
result_excelFile.setCellValue("街道", 3, 1, 3);
result_excelFile.setCellValue("类型", 3, 1, 4);
result_excelFile.setCellValue("范围（米）", 3, 1, 5);
result_excelFile.setCellValue("速度(千米/小时)", 3, 1, 6);
result_excelFile.setCellValue("承接任务数量（个）", 3, 1, 7);
result_excelFile.setCellValue("承接任务数占总任务数比率（%）", 3, 1, 8);

result_excelFile.setCellValue("货车Id", 4, 1, 1);
result_excelFile.setCellValue("区域Id", 4, 1, 2);
result_excelFile.setCellValue("类型", 4, 1, 3);
result_excelFile.setCellValue("范围（米）", 4, 1, 4);
result_excelFile.setCellValue("速度(千米/小时)", 4, 1, 5);
result_excelFile.setCellValue("累计等待时间（分钟）", 4, 1, 6);
result_excelFile.setCellValue("累计工作时间（分钟）", 4, 1, 7);
result_excelFile.setCellValue("累计行驶里程（米）", 4, 1, 8);
result_excelFile.setCellValue("空载等待成本（元）", 4, 1, 9);
result_excelFile.setCellValue("承接任务数量（个）", 4, 1, 10);
result_excelFile.setCellValue("承接任务数占总任务数比率（%）", 4, 1, 11);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1689661945585</Id>
					<Name><![CDATA[initParam]]></Name>
					<X>-140</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[laborRate = dailyWages / 8 / 60 / 60;
depreciationRate = truckCost / 6 / 360 / 12 / 60 / 60;
timeInterval = fullDayOrderNumber / fullDayTime / 60 / 60;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<AreaNodE>]]></ReturnType>
					<Id>1690188278537</Id>
					<Name><![CDATA[findOptimalPathDijkstra]]></Name>
					<X>-440</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[nodeList]]></Name>
						<Type><![CDATA[ArrayList<AreaNodE>]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<ArrayList<AreaNodE>> allPaths = new ArrayList<>();
ArrayList<AreaNodE> optimalPath = new ArrayList<>();
AreaNodE startNode = nodeList.get(0);
AreaNodE endNode = nodeList.get(nodeList.size() - 1);

Map<AreaNodE, Double> distances = new HashMap<>();
Map<AreaNodE, AreaNodE> parentNodes = new HashMap<>();
PriorityQueue<AreaNodE> pq = new PriorityQueue<>();

for (AreaNodE node : nodeList) {
	distances.put(node, Double.MAX_VALUE);
}

distances.put(startNode, 0.0);
pq.add(startNode);

while (!pq.isEmpty()) {
	AreaNodE currentNode = pq.poll();

	if (currentNode == endNode) {
		ArrayList<AreaNodE> currentPath = new ArrayList<>();
		AreaNodE node = currentNode;
		while (node != null) {
			currentPath.add(0, node);
			node = parentNodes.get(node);
		}
		allPaths.add(currentPath);
	}
	for (AreaNodE neighbor : nodeList) {
		if (isReachable(currentNode, neighbor)) {
			double distance = distances.get(currentNode) + Math.sqrt(Math.pow(neighbor.x - currentNode.x, 2) + Math.pow(neighbor.y - currentNode.y, 2));
			if (distance < distances.get(neighbor)) {
				distances.put(neighbor, distance);
				parentNodes.put(neighbor, currentNode);
				pq.add(neighbor);
			}
		}
	}
}
int minNodeCount = Integer.MAX_VALUE;
for (ArrayList<AreaNodE> path : allPaths) {
	if (path.size() < minNodeCount) {
		minNodeCount = path.size();
		optimalPath = path;
	}
}
// 如果没有找到合适的路径，就返回全部节点
if (optimalPath.size() == 0) {
	optimalPath = nodeList;
}
return optimalPath;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1690188791265</Id>
					<Name><![CDATA[isReachable]]></Name>
					<X>-440</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[node1]]></Name>
						<Type><![CDATA[AreaNodE]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[node2]]></Name>
						<Type><![CDATA[AreaNodE]]></Type>
					</Parameter>
					<Body><![CDATA[double distance = Math.sqrt(Math.pow(node2.x - node1.x, 2) + Math.pow(node2.y - node1.y, 2));
double sumOfRadii = node1.radius + node2.radius;
return distance <= sumOfRadii;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[ArrayList<double[]>]]></ReturnType>
					<Id>1690188866223</Id>
					<Name><![CDATA[getMidPoints]]></Name>
					<X>-440</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[nodeList]]></Name>
						<Type><![CDATA[ArrayList<AreaNodE> ]]></Type>
					</Parameter>
					<Body><![CDATA[ArrayList<double[]> midPoints = new ArrayList<double[]>();
for (int i = 1; i < nodeList.size() - 1; i++) {
	AreaNodE node = nodeList.get(i);
	AreaNodE nextNode = nodeList.get(i + 1);
	double midX = (node.x + nextNode.x) / 2.0;
	double midY = (node.y + nextNode.y) / 2.0;
	double[] point = {midX, midY};
	midPoints.add(point);
}
return midPoints;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1690256346762</Id>
					<Name><![CDATA[findClosestPoint]]></Name>
					<X>-440</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double minDistance = 0.0;
int closestIndex = -1;
for (Area item : area) {
	double distance = mercatorDistance(supermarket.get(0).supermarket_mercator, item.area_mercator);
	if (closestIndex == -1 || distance < minDistance) {
		minDistance = distance;
		closestIndex = item.id;
	}
}
// for (int i = 0; i < pointBList.size(); i++) {
// double[] pointB = pointBList.get(i);
// double distance = mercatorDistance(pointA, pointB);
//
// if (closestIndex == -1 || distance < minDistance) {
// minDistance = distance;
// closestIndex = i;
// }
// }

return closestIndex;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1690352721388</Id>
					<Name><![CDATA[initAreaTruckList]]></Name>
					<X>-140</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Area area_item : area) {
	area_item.truckList = new ArrayList<Truck>();
	for (Truck truck_item : trucks) {
		if (truck_item.areaId == area_item.id) {
			area_item.truckList.add(truck_item);
		}
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1691116659713</Id>
					<Name><![CDATA[initAreaAndTruckRadius]]></Name>
					<X>-140</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Area item : area) {
	if (item.type == 0) {
		item.activityRadius = radius_A;
	} else if (item.type == 1) {
		item.activityRadius = radius_B;
	} else if (item.type == 2) {
		item.activityRadius = radius_C;
	}
}
for (Truck item : trucks) {
	if (item.type == 0) {
		item.activityRadius = radius_A;
	} else if (item.type == 1) {
		item.activityRadius = radius_B;
	} else if (item.type == 2) {
		item.activityRadius = radius_C;
	}
	item.totalPosition = truckPosition;
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1691548373369</Id>
					<Name><![CDATA[initTruckTemplate]]></Name>
					<X>-140</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// 内环内
truckTemplateType0List.add(0, new Truck(0, 0, "内环内", "内环内", 121.445759, 31.250853, 0, 4500, 20, 360, 0));
truckTemplateType0List.add(1, new Truck(1, 1, "内环内", "内环内", 121.432512, 31.20501, 0, 4500, 20, 360, 0));
truckTemplateType0List.add(2, new Truck(2, 2, "内环内", "内环内", 121.490883, 31.216694, 0, 4500, 20, 360, 0));
truckTemplateType0List.add(3, new Truck(3, 3, "内环内", "内环内", 121.501647, 31.263062, 0, 4500, 20, 360, 0));
truckTemplateType0List.add(4, new Truck(4, 4, "内环内", "内环内", 121.547185, 31.228199, 0, 4500, 20, 360, 0));
truckTemplateType0List.add(5, new Truck(5, 5, "内环内", "内环内", 121.453836, 31.28022, 0, 4500, 20, 360, 0));
// 中外环
truckTemplateType1List.add(0, new Truck(6, 6, "中外环", "中外环", 121.485861, 31.327808, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(1, new Truck(7, 7, "中外环", "中外环", 121.547592, 31.313138, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(2, new Truck(8, 8, "中外环", "中外环", 121.602361, 31.265938, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(3, new Truck(9, 9, "中外环", "中外环", 121.604217, 31.183779, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(4, new Truck(10, 10, "中外环", "中外环", 121.511853, 31.16988, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(5, new Truck(11, 11, "中外环", "中外环", 121.426915, 31.145254, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(6, new Truck(12, 12, "中外环", "中外环", 121.375396, 31.186161, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(7, new Truck(13, 13, "中外环", "中外环", 121.380501, 31.254036, 1, 7500, 40, 360, 0));
truckTemplateType1List.add(8, new Truck(14, 14, "中外环", "中外环", 121.404637, 31.331377, 1, 7500, 40, 360, 0));
// 外环外
truckTemplateType2List.add(0, new Truck(15, 15, "͢͢外环外", "͢͢外环外", 121.701623, 31.23158, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(1, new Truck(16, 16, "͢͢外环外", "͢͢外环外", 121.802572, 31.075863, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(2, new Truck(17, 17, "͢͢外环外", "͢͢外环外", 121.86523, 30.933616, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(3, new Truck(18, 18, "͢͢外环外", "͢͢外环外", 121.626846, 31.071593, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(4, new Truck(19, 19, "͢͢外环外", "͢͢外环外", 121.697884, 30.927375, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(5, new Truck(20, 20, "͢͢外环外", "͢͢外环外", 121.44738, 31.041699, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(6, new Truck(21, 21, "͢͢外环外", "͢͢外环外", 121.535867, 30.904922, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(7, new Truck(22, 22, "͢͢外环外", "͢͢外环外", 121.331476, 30.956236, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(8, new Truck(23, 23, "͢͢外环外", "͢͢外环外", 121.17569, 30.868557, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(9, new Truck(24, 24, "͢͢外环外", "͢͢外环外", 121.365125, 30.830039, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(10, new Truck(25, 25, "͢͢外环外", "͢͢外环外", 121.160734, 31.032089, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(11, new Truck(26, 26, "͢͢外环外", "͢͢外环外", 121.009933, 31.047038, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(12, new Truck(27, 27, "͢͢外环外", "͢͢外环外", 121.270407, 31.118551, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(13, new Truck(28, 28, "͢͢外环外", "͢͢外环外", 121.102159, 31.199604, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(14, new Truck(29, 29, "͢͢外环外", "͢͢外环外", 121.266669, 31.282718, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(15, new Truck(30, 30, "͢͢外环外", "͢͢外环外", 121.19563, 31.413634, 2, 15000, 60, 360, 0));
truckTemplateType2List.add(16, new Truck(31, 31, "͢͢外环外", "͢͢外环外", 121.377588, 31.413634, 2, 15000, 60, 360, 0));]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1691551907434</Id>
					<Name><![CDATA[initTruck]]></Name>
					<X>-140</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int trucksSize = trucks.size();
for (int i = 0; i < trucksSize; i++) {
	Truck t = trucks.get(0);
	remove_trucks(t);
}
for (int i = 0; i < truckType0Multiplier; i++) {
	for (Truck t : truckTemplateType0List) {
		add_trucks(trucks.size(), t.areaId, t.administrativeDistrict, t.street, t.longitude, t.latitude, t.type, t.activityRadius, t.velocity, t.totalPosition, t.usedPosition);
	}
}
for (int i = 0; i < truckType1Multiplier; i++) {
	for (Truck t : truckTemplateType1List) {
		add_trucks(trucks.size(), t.areaId, t.administrativeDistrict, t.street, t.longitude, t.latitude, t.type, t.activityRadius, t.velocity, t.totalPosition, t.usedPosition);
	}
}
for (int i = 0; i < truckType2Multiplier; i++) {
	for (Truck t : truckTemplateType2List) {
		add_trucks(trucks.size(), t.areaId, t.administrativeDistrict, t.street, t.longitude, t.latitude, t.type, t.activityRadius, t.velocity, t.totalPosition, t.usedPosition);
	}
}
if (area27TruckMultiplier > truckType2Multiplier) {
	int addNum = area27TruckMultiplier - truckType2Multiplier;
	Truck t = truckTemplateType2List.get(12);
	for (int i = 0; i < addNum; i++) {
		add_trucks(trucks.size(), t.areaId, t.administrativeDistrict, t.street, t.longitude, t.latitude, t.type, t.activityRadius, t.velocity, t.totalPosition, t.usedPosition);
	}
}
for (Truck t : trucks) {
	t.setLatLon(t.latitude, t.longitude);
	t.setSpeed(t.velocity / 3.6);
	t.truck_mercator = lonLatToMercator(t.longitude, t.latitude);
	// System.out.println("t.id: "+t.id);
	// System.out.println("t.areaId: "+t.areaId);
	// System.out.println("t.administrativeDistrict: "+t.administrativeDistrict);
	// System.out.println("t.type: "+t.type);
	// System.out.println("t.street: "+t.street);
	// System.out.println("t.ac: "+t.activityRadius);
	// System.out.println("t.velocity: "+t.velocity);
	// System.out.println("t.totalPosition: "+t.totalPosition);
	// System.out.println("t.usedPosition: "+t.usedPosition);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1691994607092</Id>
					<Name><![CDATA[nullNumCheck]]></Name>
					<X>-640</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int nullAreaNum = 0;
double nullAreaProbability = 0;
ArrayList<Customer> nullAreaCustomerList = new ArrayList<Customer>();
int nullPathNum = 0;
double nullPathProbability = 0;
ArrayList<Customer> nullPathCustomerList = new ArrayList<Customer>();
int oneNodeNum = 0;
double oneNodeProbability = 0;
ArrayList<Customer> oneNodeCustomerList = new ArrayList<Customer>();
int oneNodeArea27Num = 0;
double oneNodeArea27Probability = 0;
ArrayList<Customer> oneNodeArea27CustomerList = new ArrayList<Customer>();
int maxPathNum = 0;
int maxPathNumCustomerId = -1;

for (Customer cus : customer) {
	// System.out.println("========== customer " + cus.id + " ==========");
	// 转换到新坐标系
	supermarket_new_coordinate = transformCoordinates(supermarket.get(0).supermarket_mercator, cus.customer_mercator, supermarket.get(0).supermarket_mercator);
	customer_new_coordinate = transformCoordinates(supermarket.get(0).supermarket_mercator, cus.customer_mercator, cus.customer_mercator);
	// 更新区域的墨卡托坐标;
	area_new_coordinate_list = new ArrayList<double[]>();
	for (int i = 0; i < area.size(); i++) {
		area_new_coordinate_list.add(i, transformCoordinates(supermarket.get(0).supermarket_mercator, cus.customer_mercator, area.get(i).area_mercator));
	}
	// 找到在范围内的点
	double supermarket_customer_length = customer_new_coordinate[0] - supermarket_new_coordinate[0];
	int[] areaIndexList = checkPointsInsideRectangle(supermarket_new_coordinate, customer_new_coordinate, area_new_coordinate_list, Rab);
	ArrayList<double[]> areaPointList = new ArrayList<double[]>();
	for (int i = 0; i < areaIndexList.length; i++) {
		// truckId,new_coordinate_x,new_coordinate_y,type,activity_radius
		areaPointList.add(new double[]{new Double(areaIndexList[i]), area_new_coordinate_list.get(areaIndexList[i])[0], area_new_coordinate_list.get(areaIndexList[i])[1], new Double(area.get(areaIndexList[i]).type), area.get(areaIndexList[i]).activityRadius});
	}
	// 使用自定义的比较器按照第一个值从小到大进行排序
	Collections.sort(areaPointList, new Comparator<double[]>() {
		@Override
		public int compare(double[] o1, double[] o2) {
			return Double.compare(o1[1], o2[1]);
		}
	});
	// 路径规划
	ArrayList<AreaNodE> areaNodeList = new ArrayList<AreaNodE>();
	areaNodeList.add(new AreaNodE(-1.0, supermarket_new_coordinate[0], supermarket_new_coordinate[1], -1.0, 0.0, Double.MAX_VALUE));
	for (int i = 0; i < areaPointList.size(); i++) {
		areaNodeList.add(new AreaNodE(areaPointList.get(i)[0], areaPointList.get(i)[1], areaPointList.get(i)[2], areaPointList.get(i)[3], areaPointList.get(i)[4], Double.MAX_VALUE));
		areaIndexList[i] = (int) areaPointList.get(i)[0];
	}
	areaNodeList.add(new AreaNodE(-2.0, customer_new_coordinate[0], customer_new_coordinate[1], -2.0, 0.0, Double.MAX_VALUE));
	// System.out.println("==========" + cus.id + "START==========");
	// for (AreaNodE areaNode : areaNodeList) {
	// System.out.println("areaNode: " + areaNode.id);
	// }
	// System.out.println("==========END==========");
	if (areaNodeList.size() == 2) {
		nullAreaNum++;
		nullAreaProbability += cus.probability;
		nullAreaCustomerList.add(cus);
	}
	ArrayList<AreaNodE> bestAreaPointList = findOptimalPathDijkstra(areaNodeList);
	if (areaNodeList.size() > 3 && bestAreaPointList.size() == areaNodeList.size()) {
		nullPathNum++;
		nullPathProbability += cus.probability;
		nullPathCustomerList.add(cus);
	} else if (areaNodeList.size() == 3 || bestAreaPointList.size() == 3) {
		oneNodeNum++;
		oneNodeProbability += cus.probability;
		oneNodeCustomerList.add(cus);
		if (areaNodeList.get(1).id == 27 || bestAreaPointList.get(1).id == 27) {
			oneNodeArea27Num++;
			oneNodeArea27Probability += cus.probability;
			oneNodeArea27CustomerList.add(cus);
		}
		// System.out.println("==========" + cus.id + "START==========");
		// for (AreaNodE areaNode : bestAreaPointList) {
		// System.out.println("areaNode: " + areaNode.id);
		// }
		// System.out.println("==========END==========");
	}
	if (maxPathNum < bestAreaPointList.size()) {
		maxPathNum = bestAreaPointList.size();
		maxPathNumCustomerId = cus.id;
	}
}
System.out.println("customer总量: " + customer.size());
System.out.println("矩形范围内找不到车的customer的数量: " + nullAreaNum);
System.out.println("矩形范围内找不到车的customer占customer总量占比: " + (nullAreaNum * 100.00 / customer.size()) + "%");
System.out.println("矩形范围内找不到车的customer的概率: " + (nullAreaProbability) + "%");
// for (Customer cus : nullAreaCustomerList) {
// System.out.println("customerId: " + cus.id);
// }
System.out.println("找不到路径的customer数量: " + nullPathNum);
System.out.println("找不到路径的customer数量占customer总量占比: " + nullPathNum * 100.00 / customer.size() + "%");
System.out.println("找不到路径的customer的概率: " + (nullPathProbability) + "%");
// for (Customer cus : nullPathCustomerList) {
// System.out.println("customerId: " + cus.id);
// }
System.out.println("只有一个节点的customer数量: " + oneNodeNum);
System.out.println("只有一个节点的customer数量占customer总量占比: " + oneNodeNum * 100.00 / customer.size() + "%");
System.out.println("只有一个节点的customer的概率: " + (oneNodeProbability) + "%");
// for (Customer cus : oneNodeCustomerList) {
// System.out.println("customerId: " + cus.id);
// }
System.out.println("只有一个节点且是27区的customer数量: " + oneNodeArea27Num);
System.out.println("只有一个节点且是27区的customer数量占customer总量占比: " + oneNodeArea27Num * 100.00 / customer.size() + "%");
System.out.println("只有一个节点且是27区的customer的概率: " + (oneNodeArea27Probability) + "%");
for (Customer cus : oneNodeArea27CustomerList) {
	System.out.println("customerId: " + cus.id);
}
System.out.println("最大路径节点数量: " + maxPathNum);
System.out.println("最大路径节点数量对应的customerId: " + maxPathNumCustomerId);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1692153329696</Id>
					<Name><![CDATA[writeExcel]]></Name>
					<X>-140</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (DeliveryOrder order : deliveryOrderList) {
	int rowNum = result_excelFile.getLastRowNum(1) + 1;
	result_excelFile.setCellValue(order.id, 1, rowNum, 1);
	result_excelFile.setCellValue(order.supermarketId, 1, rowNum, 2);
	result_excelFile.setCellValue(order.customerId, 1, rowNum, 3);
	result_excelFile.setCellValue(map.getDistanceByRoute(supermarket.get(0).getLatitude(), supermarket.get(0).getLongitude(), order.endLatitude, order.endLongitude), 1, rowNum, 4);
	result_excelFile.setCellValue(order.totalDistance, 1, rowNum, 5);
	result_excelFile.setCellValue(order.creationTime.toGMTString(), 1, rowNum, 6);
	result_excelFile.setCellValue(order.completionTime.toGMTString(), 1, rowNum, 7);
	result_excelFile.setCellValue(dateToTime(order.completionTime) - dateToTime(order.creationTime), 1, rowNum, 8);
	result_excelFile.setCellValue(order.totalCost, 1, rowNum, 9);
	if (order.state == 3) {
		result_excelFile.setCellValue("已完成", 1, rowNum, 10);
	} else if (order.state == 2) {
		result_excelFile.setCellValue("运输中", 1, rowNum, 10);
	} else if (order.state == 1) {
		result_excelFile.setCellValue("未取货", 1, rowNum, 10);
	} else if (order.state == 0) {
		result_excelFile.setCellValue("未分配", 1, rowNum, 10);
	}
	for (AreaTask areaTask : order.areaTaskList) {
		int task_rowNum = result_excelFile.getLastRowNum(2) + 1;
		result_excelFile.setCellValue(areaTask.orderId, 2, task_rowNum, 1);
		result_excelFile.setCellValue(areaTask.index, 2, task_rowNum, 2);
		result_excelFile.setCellValue(areaTask.supermarketId, 2, task_rowNum, 3);
		result_excelFile.setCellValue(areaTask.customerId, 2, task_rowNum, 4);
		result_excelFile.setCellValue(areaTask.areaId, 2, task_rowNum, 5);
		result_excelFile.setCellValue(areaTask.truckId, 2, task_rowNum, 6);
		if (areaTask.type == 0) {
			result_excelFile.setCellValue("超市取货", 2, task_rowNum, 7);
		} else if (areaTask.type == 1) {
			result_excelFile.setCellValue("交接取货", 2, task_rowNum, 7);
		} else if (areaTask.type == 2) {
			result_excelFile.setCellValue("交接送货", 2, task_rowNum, 7);
		} else if (areaTask.type == 3) {
			result_excelFile.setCellValue("客户送货", 2, task_rowNum, 7);
		}
		if (areaTask.state == 3) {
			result_excelFile.setCellValue("任务已完成", 2, task_rowNum, 8);
		} else {
			result_excelFile.setCellValue("任务未完成,type:" + areaTask.state, 2, task_rowNum, 8);
		}
		if (areaTask.startTime != null) {
			result_excelFile.setCellValue(areaTask.startTime.toGMTString(), 2, task_rowNum, 9);
		}
		if (areaTask.endTime != null) {
			result_excelFile.setCellValue(areaTask.endTime.toGMTString(), 2, task_rowNum, 10);
		}
		if (areaTask.isGot) {
			result_excelFile.setCellValue("货在车上", 2, task_rowNum, 11);
		} else {
			result_excelFile.setCellValue("货不在车上", 2, task_rowNum, 11);
		}
	}
}
for (Area item : area) {
	int area_rowNum = result_excelFile.getLastRowNum(3) + 1;
	result_excelFile.setCellValue(item.id, 3, area_rowNum, 1);
	result_excelFile.setCellValue(item.administrativeDistrict, 3, area_rowNum, 2);
	result_excelFile.setCellValue(item.street, 3, area_rowNum, 3);
	if (item.type == 0) {
		result_excelFile.setCellValue("内环内", 3, area_rowNum, 4);
	} else if (item.type == 1) {
		result_excelFile.setCellValue("中外环", 3, area_rowNum, 4);
	} else if (item.type == 2) {
		result_excelFile.setCellValue("外环外", 3, area_rowNum, 4);
	}
	result_excelFile.setCellValue(item.activityRadius, 3, area_rowNum, 5);
	result_excelFile.setCellValue(item.velocity, 3, area_rowNum, 6);
	result_excelFile.setCellValue(item.deliveryOrderList.size(), 3, area_rowNum, 7);
	result_excelFile.setCellValue(item.deliveryOrderList.size() * 100 / testOrderNumber, 3, area_rowNum, 8);
}
for (Truck item : trucks) {
	int truck_rowNum = result_excelFile.getLastRowNum(4) + 1;
	result_excelFile.setCellValue(item.id, 4, truck_rowNum, 1);
	result_excelFile.setCellValue(item.areaId, 4, truck_rowNum, 2);
	if (item.type == 0) {
		result_excelFile.setCellValue("内环内", 4, truck_rowNum, 3);
	} else if (item.type == 1) {
		result_excelFile.setCellValue("中外环", 4, truck_rowNum, 3);
	} else if (item.type == 2) {
		result_excelFile.setCellValue("外环外", 4, truck_rowNum, 3);
	}
	result_excelFile.setCellValue(item.activityRadius, 4, truck_rowNum, 4);
	result_excelFile.setCellValue(item.velocity, 4, truck_rowNum, 5);
	result_excelFile.setCellValue(item.totalWaitTime, 4, truck_rowNum, 6);
	result_excelFile.setCellValue(item.totalWorkTime, 4, truck_rowNum, 7);
	result_excelFile.setCellValue(item.totalDistance, 4, truck_rowNum, 8);
	result_excelFile.setCellValue(item.totalWaitTime * (laborRate + depreciationRate), 4, truck_rowNum, 9);
	result_excelFile.setCellValue(item.deliveryOrderList.size(), 4, truck_rowNum, 10);
	result_excelFile.setCellValue(item.deliveryOrderList.size() * 100 / testOrderNumber, 4, truck_rowNum, 11);
}]]></Body>
				</Function>
			</Functions>
			<Connectivity>
				<ExcelFile>
					<Id>1686723816368</Id>
					<Name><![CDATA[result_excelFile]]></Name>
					<X>710</X><Y>-40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ResourceReference>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[result.xlsx]]></ClassName>
					</ResourceReference>
					<SaveInSnapshot>false</SaveInSnapshot>
					<LoadOnStartup>true</LoadOnStartup>
					<SaveOnDispose>true</SaveOnDispose>
				</ExcelFile>
			</Connectivity>
			<AgentLinks>
				<AgentLink>
					<Id>1685604887150</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1685929219329</Id>
					<Name><![CDATA[supermarket]]></Name>
					<X>10</X><Y>-190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1685929221506</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Supermarket]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[Supermarket]]></ClassName>
							<ItemName><![CDATA[1685929204456]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[id]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
									<ItemName><![CDATA[id]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[name]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
									<ItemName><![CDATA[name]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[longitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
									<ItemName><![CDATA[longitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[latitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[supermarket]]></ClassName>
									<ItemName><![CDATA[latitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>XYZ</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="DatabaseQueryCodeValue">
						<Type>SELECT_UNIQUE_VALUE</Type>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[supermarket]]></ClassName>
						</TableReference>
						<Condition>
							<ColumnReference>
							</ColumnReference>
							<Operator>EQUALS</Operator>
						</Condition>
						<ColumnReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[supermarket]]></ClassName>
							<ItemName><![CDATA[latitude]]></ItemName>
						</ColumnReference>
					</LatitudeCode>
					<LongitudeCode Class="DatabaseQueryCodeValue">
						<Type>SELECT_UNIQUE_VALUE</Type>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[supermarket]]></ClassName>
						</TableReference>
						<Condition>
							<ColumnReference>
							</ColumnReference>
							<Operator>EQUALS</Operator>
						</Condition>
						<ColumnReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[supermarket]]></ClassName>
							<ItemName><![CDATA[longitude]]></ItemName>
						</ColumnReference>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>LOAD_FROM_DATABASE</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[supermarket]]></ClassName>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
					<ParameterToDatabaseColumnMapping>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Supermarket]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[supermarket]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Supermarket]]></ClassName>
								<ItemName><![CDATA[name]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[supermarket]]></ClassName>
								<ItemName><![CDATA[name]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Supermarket]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[supermarket]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Supermarket]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[supermarket]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>	
					</ParameterToDatabaseColumnMapping>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1685929608970</Id>
					<Name><![CDATA[customer]]></Name>
					<X>10</X><Y>-170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1685929610855</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Customer]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[Customer]]></ClassName>
							<ItemName><![CDATA[1685929602946]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[id]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[id]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[administrativeDistrict]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[administrative_district]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[street]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[street]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[longitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[longitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[latitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[latitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[probability]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[customer]]></ClassName>
									<ItemName><![CDATA[probability]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>LOAD_FROM_DATABASE</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[customer]]></ClassName>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
					<ParameterToDatabaseColumnMapping>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[administrativeDistrict]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[administrative_district]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LONGITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LATITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Customer]]></ClassName>
								<ItemName><![CDATA[probability]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[customer]]></ClassName>
								<ItemName><![CDATA[probability]]></ItemName>
							</Value>
						</Item>	
					</ParameterToDatabaseColumnMapping>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1685931327638</Id>
					<Name><![CDATA[trucks]]></Name>
					<X>10</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1685931329861</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Truck]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[Truck]]></ClassName>
							<ItemName><![CDATA[1685931320938]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[id]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[areaId]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[administrativeDistrict]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[street]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[longitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[latitude]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[type]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[activityRadius]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[velocity]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[totalPosition]]></Name>
						</Parameter>
						<Parameter>
							<Name><![CDATA[usedPosition]]></Name>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[getLatitude()]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[getLongitude()]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[truck]]></ClassName>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
					<ParameterToDatabaseColumnMapping>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[areaId]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[area_id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[administrativeDistrict]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[administrative_district]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LONGITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LATITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[type]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[type]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[activityRadius]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[activity_radius]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[velocity]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[velocity]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[totalPosition]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[total_position]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Truck]]></ClassName>
								<ItemName><![CDATA[usedPosition]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[truck]]></ClassName>
								<ItemName><![CDATA[used_position]]></ItemName>
							</Value>
						</Item>	
					</ParameterToDatabaseColumnMapping>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1690179655424</Id>
					<Name><![CDATA[area]]></Name>
					<X>10</X><Y>-150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<PresentationId>1692154908190</PresentationId>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Area]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[Area]]></ClassName>
							<ItemName><![CDATA[1690179598729]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
						<Parameter>
							<Name><![CDATA[id]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[id]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[administrativeDistrict]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[administrative_district]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[street]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[street]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[longitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[longitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[latitude]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[latitude]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[type]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[type]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[activityRadius]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[activity_radius]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
						<Parameter>
							<Name><![CDATA[velocity]]></Name>
							<Value Class="DatabaseQueryCodeValue">
								<Type>SELECT_UNIQUE_VALUE</Type>
								<TableReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
								</TableReference>
								<Condition>
									<ColumnReference>
									</ColumnReference>
									<Operator>EQUALS</Operator>
								</Condition>
								<ColumnReference>
									<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
									<ClassName><![CDATA[area]]></ClassName>
									<ItemName><![CDATA[velocity]]></ItemName>
								</ColumnReference>
							</Value>
						</Parameter>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>LOAD_FROM_DATABASE</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
							<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
							<ClassName><![CDATA[area]]></ClassName>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
					<ParameterToDatabaseColumnMapping>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[id]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[administrativeDistrict]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[administrative_district]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[street]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[type]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[type]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[activityRadius]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[activity_radius]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[Area]]></ClassName>
								<ItemName><![CDATA[velocity]]></ItemName>
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[velocity]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LONGITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[longitude]]></ItemName>
							</Value>
						</Item>
						<Item>
							<Key>
								FAKE_PARAMETER_GIS_LOCATION_LATITUDE_xjal
							</Key>
							<Value>
								<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
								<ClassName><![CDATA[area]]></ClassName>
								<ItemName><![CDATA[latitude]]></ItemName>
							</Value>
						</Item>	
					</ParameterToDatabaseColumnMapping>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1685604887156</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<GISMap>
					<Id>1685604901692</Id>
					<Name><![CDATA[map]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>800</Width>
					<Height>600</Height>
					<GISShapes>
					</GISShapes>
					<Latitude>31.073850803979564</Latitude>
					<Longitude>121.43988272633528</Longitude>
					<Scale>500000</Scale>
					<BorderColor>-4144960</BorderColor>
					<FillColor>-1</FillColor>
					<ShowTiles>true</ShowTiles>
					<TileURLProvider>ANYLOGIC</TileURLProvider>
					<CustomTileURL>false</CustomTileURL>
					<TileURL><![CDATA[https://a.tile.openstreetmap.org/[zoom]/[x]/[y].png]]></TileURL>				
					<RouteProviderType>WEB_SERVICE</RouteProviderType>
					<RouteNotFound>CREATE_STRAIGHT_LINE</RouteNotFound>
					<OnlineRouteProvider>ANYLOGIC</OnlineRouteProvider>
					<TransportType>CAR</TransportType>
					<RoutingMethod>FASTEST</RoutingMethod>
					<PathfindingAlgorithm>DIJKSTRABI</PathfindingAlgorithm>
					<CustomRouteProvider>false</CustomRouteProvider>
					<RouteSourceResourceReference>
					</RouteSourceResourceReference>
					<RouteGraphResourceReference>
					</RouteGraphResourceReference>	
					<MapScaleBasedGeneralization>true</MapScaleBasedGeneralization>
					<AbsolutePrecisionGeneralization>1000</AbsolutePrecisionGeneralization>


				</GISMap>
				<EmbeddedObjectPresentation>
					<Id>1685929221506</Id>
					<Name><![CDATA[supermarket_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>31.103239959872468</Latitude>
					<Longitude>121.44125545751501</Longitude>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1685929610855</Id>
					<Name><![CDATA[customer_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>31.103239959872468</Latitude>
					<Longitude>121.44125545751501</Longitude>
				</EmbeddedObjectPresentation>
				<EmbeddedObjectPresentation>
					<Id>1685931329861</Id>
					<Name><![CDATA[trucks_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>31.073850803979564</Latitude>
					<Longitude>121.43988272633528</Longitude>
				</EmbeddedObjectPresentation>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1685955174813</Id>
					<Name><![CDATA[启动]]></Name>
					<X>600</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<EnableExpression><![CDATA[startFlag == false]]></EnableExpression>
						<ActionCode><![CDATA[// 初始化货车
initTruck();
// 初始化area车队列表
initAreaTruckList();
initAreaAndTruckRadius();
initParam();
startGeneratingOrders.restart();
stopSimulation.start();
startFlag = true;
System.out.println("truck数量" + trucks.size());]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[启动]]></LabelText>
					</ExtendedProperties>
				</Control>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1686728870232</Id>
					<Name><![CDATA[editbox]]></Name>
					<X>875</X><Y>90</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>testOrderNumber</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1686728910663</Id>
					<Name><![CDATA[text]]></Name>
					<X>810</X><Y>101</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[样本测试量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689579599403</Id>
					<Name><![CDATA[text2]]></Name>
					<X>801</X><Y>340</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[B类车的半径]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689579599407</Id>
					<Name><![CDATA[editbox2]]></Name>
					<X>875</X><Y>289</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>radius_A</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689579599411</Id>
					<Name><![CDATA[text3]]></Name>
					<X>801</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[A类车的半径]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689579599413</Id>
					<Name><![CDATA[editbox3]]></Name>
					<X>875</X><Y>329</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>radius_B</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689579704921</Id>
					<Name><![CDATA[text4]]></Name>
					<X>800</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[C类车的半径]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689579704926</Id>
					<Name><![CDATA[editbox4]]></Name>
					<X>875</X><Y>369</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>radius_C</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689661260087</Id>
					<Name><![CDATA[text5]]></Name>
					<X>810</X><Y>140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[司机日工资]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689661260093</Id>
					<Name><![CDATA[editbox5]]></Name>
					<X>875</X><Y>129</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>dailyWages</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689661509047</Id>
					<Name><![CDATA[editbox7]]></Name>
					<X>875</X><Y>169</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>truckCost</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689661509049</Id>
					<Name><![CDATA[text7]]></Name>
					<X>810</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[货车总投入]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689662307178</Id>
					<Name><![CDATA[editbox8]]></Name>
					<X>875</X><Y>9</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>fullDayOrderNumber</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689662307182</Id>
					<Name><![CDATA[text8]]></Name>
					<X>810</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[全日订单量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689662401282</Id>
					<Name><![CDATA[editbox9]]></Name>
					<X>875</X><Y>49</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>fullDayTime</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689662401286</Id>
					<Name><![CDATA[text9]]></Name>
					<X>824</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[全日时长]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750670</Id>
					<Name><![CDATA[text1]]></Name>
					<X>980</X><Y>101</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750673</Id>
					<Name><![CDATA[text6]]></Name>
					<X>980</X><Y>340</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[米]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750675</Id>
					<Name><![CDATA[text10]]></Name>
					<X>980</X><Y>300</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[米]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750677</Id>
					<Name><![CDATA[text11]]></Name>
					<X>980</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[米]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750679</Id>
					<Name><![CDATA[text12]]></Name>
					<X>980</X><Y>140</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[元]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750681</Id>
					<Name><![CDATA[text13]]></Name>
					<X>980</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[元]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750683</Id>
					<Name><![CDATA[text14]]></Name>
					<X>975</X><Y>20</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689663750685</Id>
					<Name><![CDATA[text15]]></Name>
					<X>975</X><Y>60</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[小时]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689729186988</Id>
					<Name><![CDATA[editbox10]]></Name>
					<X>875</X><Y>209</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>distanceEnergyConsumption</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689729186994</Id>
					<Name><![CDATA[text16]]></Name>
					<X>810</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[行驶运营费]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689729186996</Id>
					<Name><![CDATA[text17]]></Name>
					<X>980</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[元]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689749230930</Id>
					<Name><![CDATA[text19]]></Name>
					<X>85</X><Y>467</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[米]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1689749233842</Id>
					<Name><![CDATA[editbox11]]></Name>
					<X>874</X><Y>249</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>Rab</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1689749233845</Id>
					<Name><![CDATA[text20]]></Name>
					<X>800</X><Y>260</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[货车筛选范围]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1689749233847</Id>
					<Name><![CDATA[text21]]></Name>
					<X>979</X><Y>260</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[米]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1691116398211</Id>
					<Name><![CDATA[text18]]></Name>
					<X>810</X><Y>420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[货车的仓位]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1691116398219</Id>
					<Name><![CDATA[editbox6]]></Name>
					<X>875</X><Y>409</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<LinkTo>true</LinkTo>
						<Link>truckPosition</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1691116398222</Id>
					<Name><![CDATA[text22]]></Name>
					<X>980</X><Y>420</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1691551636292</Id>
					<Name><![CDATA[text23]]></Name>
					<X>801</X><Y>460</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[A类车的数量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1691551636297</Id>
					<Name><![CDATA[editbox12]]></Name>
					<X>875</X><Y>529</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<MinValue><![CDATA[1]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>truckType2Multiplier</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1691551636302</Id>
					<Name><![CDATA[text24]]></Name>
					<X>980</X><Y>540</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1691551636304</Id>
					<Name><![CDATA[text25]]></Name>
					<X>980</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1691551636306</Id>
					<Name><![CDATA[text26]]></Name>
					<X>800</X><Y>540</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[C类车的数量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1691551636308</Id>
					<Name><![CDATA[editbox13]]></Name>
					<X>875</X><Y>449</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<MinValue><![CDATA[1]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>truckType0Multiplier</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1691551636310</Id>
					<Name><![CDATA[text27]]></Name>
					<X>801</X><Y>500</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[B类车的数量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1691551636312</Id>
					<Name><![CDATA[text28]]></Name>
					<X>980</X><Y>460</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1691551636314</Id>
					<Name><![CDATA[editbox14]]></Name>
					<X>875</X><Y>489</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<MinValue><![CDATA[1]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>truckType1Multiplier</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="Button">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1691995555840</Id>
					<Name><![CDATA[测试]]></Name>
					<X>700</X><Y>570</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor/>
						<Enabled>true</Enabled>
						<ActionCode><![CDATA[// 初始化货车
initTruck();
// 初始化area车队列表
initAreaTruckList();
initAreaAndTruckRadius();
nullNumCheck();]]></ActionCode>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<LabelText><![CDATA[测试]]></LabelText>
					</ExtendedProperties>
				</Control>
				<EmbeddedObjectPresentation>
					<Id>1692154908190</Id>
					<Name><![CDATA[area_presentation]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<DrawingMode>AGENT_CURRENT_POSITION</DrawingMode>
					<ScaleType>AUTOMATICALLY_CALCULATED</ScaleType>
					<GISScaleForRealEmbeddedObjectPresentationSize>1000</GISScaleForRealEmbeddedObjectPresentationSize>
					<GISScaleForFixedEmbeddedObjectPresentationSize>1000000000</GISScaleForFixedEmbeddedObjectPresentationSize>
					<Latitude>31.073850803979564</Latitude>
					<Longitude>121.43988272633528</Longitude>
				</EmbeddedObjectPresentation>
				<Control Type="EditBox">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1692166895627</Id>
					<Name><![CDATA[editbox15]]></Name>
					<X>875</X><Y>569</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="100" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<FillColor/>
						<TextColor/>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[10]]></DefaultValueCode>
						<MinValue><![CDATA[truckType2Multiplier]]></MinValue>
						<MaxValue><![CDATA[100]]></MaxValue>
						<LinkTo>true</LinkTo>
						<Link>area27TruckMultiplier</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1692166895630</Id>
					<Name><![CDATA[text29]]></Name>
					<X>800</X><Y>580</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[27区车的数量]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1692166895632</Id>
					<Name><![CDATA[text30]]></Name>
					<X>980</X><Y>580</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[个]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1685929204450</Id>
			<Name><![CDATA[Supermarket]]></Name>
			<StartupCode><![CDATA[deliveryOrderList = new ArrayList<DeliveryOrder>();]]></StartupCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1685929204456</Id>
				<Name><![CDATA[1685929204456]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1685952000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1685929204453</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1685929204457</CurrentLevel>
			<ConnectionsId>1685929204451</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1686034314577</Id>
					<Name><![CDATA[supermarket_mercator]]></Name>
					<X>160</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929204477</Id>
					<Name><![CDATA[id]]></Name>
					<X>60</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929204479</Id>
					<Name><![CDATA[name]]></Name>
					<X>60</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929204481</Id>
					<Name><![CDATA[longitude]]></Name>
					<X>60</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929204483</Id>
					<Name><![CDATA[latitude]]></Name>
					<X>60</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1686021703681</Id>
					<Name><![CDATA[deliveryOrderList]]></Name>
					<X>160</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[DeliveryOrder]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1685929204451</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<OnReceive><![CDATA[main.deliveryOrderList.add(msg);
deliveryOrderList.add(msg);
// for (AreaTask task : msg.areaTaskList) {
// System.out.println("==========START==========");
// System.out.println("task.index:" + task.index);
// System.out.println("task.orderId:" + task.orderId);
// System.out.println("task.supermarketId:" + task.supermarketId);
// System.out.println("task.customerId:" + task.customerId);
// System.out.println("task.areaId:" + task.areaId);
// System.out.println("task.truckId:" + task.truckId);
// System.out.println("==========END==========");
// }
// for(int i = 0;i<msg.areaTaskList.size();i=i+2){
// AreaTask task1 = msg.areaTaskList.get(i);
// AreaTask task2 = msg.areaTaskList.get(i+1);
// Area area_item = main.area.get(msg.areaTaskList.get(i).areaId);
// for(Truck truck_item :area_item.truckList){
// if(truck_item.totalPosition - truck_item.usedPosition>0){
// task1.truckId = truck_item.id;
// task2.truckId = truck_item.id;
// truck_item.usedPosition++;
// break;
// }
// }
// }
send(msg, msg.areaList.get(0));
// send(msg, msg.truckList.get(0));]]></OnReceive>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[DeliveryOrder]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1685929221515</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1685929204457</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1685929204460</Id>
					<Name><![CDATA[store]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Polyline>
					<Id>1685929204462</Id>
					<Name><![CDATA[_ps268]]></Name>
					<X>0</X><Y>12</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>1342177280</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>2</Y><Z>0</Z></Point>
					   <Point><X>16</X><Y>-4</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-6</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1685929204464</Id>
					<Name><![CDATA[_ps269]]></Name>
					<X>0</X><Y>4</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-6690304</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-12</Y><Z>0</Z></Point>
					   <Point><X>-12</X><Y>-6</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1685929204466</Id>
					<Name><![CDATA[_ps270]]></Name>
					<X>-12</X><Y>6</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-8140800</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-2</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>6</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1685929204468</Id>
					<Name><![CDATA[_ps271]]></Name>
					<X>0</X><Y>12</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-9986560</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-8</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Polyline>
					<Id>1685929204470</Id>
					<Name><![CDATA[_ps272]]></Name>
					<X>-10</X><Y>7</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-12491776</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>20</X><Y>-5</Y><Z>0</Z></Point>
					   <Point><X>10</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-5</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
				<Line>
					<Id>1685929204472</Id>
					<Name><![CDATA[_ps273]]></Name>
					<X>2</X><Y>11</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9986560</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>-6</Dy>
					<Dz>0</Dz>
				</Line>
				<Line>
					<Id>1685929204474</Id>
					<Name><![CDATA[_ps274]]></Name>
					<X>-2</X><Y>11</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-8140800</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>0</Dx>
					<Dy>-6</Dy>
					<Dz>0</Dz>
				</Line>
				<Polyline>
					<Id>1685929204476</Id>
					<Name><![CDATA[_ps275]]></Name>
					<X>0</X><Y>12</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-14667264</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-6</Y><Z>0</Z></Point>
					   <Point><X>12</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-20</Y><Z>0</Z></Point>
					   <Point><X>-12</X><Y>-14</Y><Z>0</Z></Point>
					   <Point><X>-12</X><Y>-6</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Polyline>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1685929602940</Id>
			<Name><![CDATA[Customer]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1685929602946</Id>
				<Name><![CDATA[1685929602946]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1685952000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1685929602943</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1685929602947</CurrentLevel>
			<ConnectionsId>1685929602941</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1686034421563</Id>
					<Name><![CDATA[customer_mercator]]></Name>
					<X>50</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929602953</Id>
					<Name><![CDATA[id]]></Name>
					<X>50</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929602955</Id>
					<Name><![CDATA[administrativeDistrict]]></Name>
					<X>50</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929602957</Id>
					<Name><![CDATA[street]]></Name>
					<X>50</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929602959</Id>
					<Name><![CDATA[longitude]]></Name>
					<X>50</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685929602961</Id>
					<Name><![CDATA[latitude]]></Name>
					<X>50</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685947876611</Id>
					<Name><![CDATA[probability]]></Name>
					<X>50</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1685947876609</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1685952329104</Id>
					<Name><![CDATA[generateOrder]]></Name>
					<X>200</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// TODO:生成具体的订单
int nextId = 0;
if (main.deliveryOrderList.size() > 0) {
	nextId = main.deliveryOrderList.size();
}
// 生成订单
DeliveryOrder deliveryOrder = new DeliveryOrder(nextId, main.supermarket.get(0).id, this.id, main.supermarket.get(0).longitude, main.supermarket.get(0).latitude, this.longitude, this.latitude, 0, date(), null, 0, 0);

// 转换到新坐标系
deliveryOrder.supermarket_new_coordinate = main.transformCoordinates(main.supermarket.get(0).supermarket_mercator, this.customer_mercator, main.supermarket.get(0).supermarket_mercator);
deliveryOrder.customer_new_coordinate = main.transformCoordinates(main.supermarket.get(0).supermarket_mercator, this.customer_mercator, this.customer_mercator);

// 更新区域的墨卡托坐标;
deliveryOrder.area_new_coordinate_list = new ArrayList<double[]>();
for (int i = 0; i < main.area.size(); i++) {
	deliveryOrder.area_new_coordinate_list.add(i, main.transformCoordinates(main.supermarket.get(0).supermarket_mercator, this.customer_mercator, main.area.get(i).area_mercator));
}

// 找到在范围内的点
double supermarket_customer_length = deliveryOrder.customer_new_coordinate[0] - deliveryOrder.supermarket_new_coordinate[0];
int[] areaIndexList = main.checkPointsInsideRectangle(deliveryOrder.supermarket_new_coordinate, deliveryOrder.customer_new_coordinate, deliveryOrder.area_new_coordinate_list, main.Rab);
ArrayList<double[]> areaPointList = new ArrayList<double[]>();
for (int i = 0; i < areaIndexList.length; i++) {
	// truckId,new_coordinate_x,new_coordinate_y,type,activity_radius
	areaPointList.add(new double[]{new Double(areaIndexList[i]), deliveryOrder.area_new_coordinate_list.get(areaIndexList[i])[0], deliveryOrder.area_new_coordinate_list.get(areaIndexList[i])[1], new Double(main.area.get(areaIndexList[i]).type), main.area.get(areaIndexList[i]).activityRadius});
}
// 使用自定义的比较器按照第一个值从小到大进行排序
Collections.sort(areaPointList, new Comparator<double[]>() {
	@Override
	public int compare(double[] o1, double[] o2) {
		return Double.compare(o1[1], o2[1]);
	}
});

// 路径规划
ArrayList<AreaNodE> areaNodeList = new ArrayList<AreaNodE>();
areaNodeList.add(new AreaNodE(-1.0, deliveryOrder.supermarket_new_coordinate[0], deliveryOrder.supermarket_new_coordinate[1], -1.0, 0.0, Double.MAX_VALUE));
// System.out.println("deliveryOrder:" + deliveryOrder.id);
// System.out.println("==========areaPointList START==========");
// System.out.println("areaPointList.size: " + areaPointList.size());
for (int i = 0; i < areaPointList.size(); i++) {
	areaNodeList.add(new AreaNodE(areaPointList.get(i)[0], areaPointList.get(i)[1], areaPointList.get(i)[2], areaPointList.get(i)[3], areaPointList.get(i)[4], Double.MAX_VALUE));
	areaIndexList[i] = (int) areaPointList.get(i)[0];
	// System.out.println("areaId:" + areaPointList.get(i)[0]);
	// System.out.println("new_coordinate_x:" + areaPointList.get(i)[1]);
	// System.out.println("new_coordinate_y:" + areaPointList.get(i)[2]);
	// System.out.println("type:" + areaPointList.get(i)[3]);
	// System.out.println("activity_radius:" + areaPointList.get(i)[4]);
	// System.out.println("deliveryOrder.supermarket_new_coordinate:" + deliveryOrder.supermarket_new_coordinate[0] + "," + deliveryOrder.supermarket_new_coordinate[1]);
	// System.out.println("deliveryOrder.customer_new_coordinate:" + deliveryOrder.customer_new_coordinate[0] + "," + deliveryOrder.customer_new_coordinate[1]);
}
// System.out.println("==========areaPointList END==========");
areaNodeList.add(new AreaNodE(-2.0, deliveryOrder.customer_new_coordinate[0], deliveryOrder.customer_new_coordinate[1], -2.0, 0.0, Double.MAX_VALUE));
ArrayList<AreaNodE> bestAreaPointList = main.findOptimalPathDijkstra(areaNodeList);
// System.out.println("==========bestAreaPointList START==========");
// System.out.println("bestAreaPointList.size: " + bestAreaPointList.size());
// for (AreaNodE bestAreaPoint : bestAreaPointList) {
// System.out.println("bestAreaPoint.id:" + bestAreaPoint.id);
// System.out.println("bestAreaPoint.x:" + bestAreaPoint.x);
// System.out.println("bestAreaPoint.y:" + bestAreaPoint.y);
// System.out.println("bestAreaPoint.type:" + bestAreaPoint.type);
// System.out.println("bestAreaPoint.radius:" + bestAreaPoint.radius);
// }
// System.out.println("==========bestAreaPointList END==========");
// 寻找中转点
ArrayList<double[]> areaMidPointList = main.getMidPoints(bestAreaPointList);
// for (double[] midPoint : areaMidPointList) {
// System.out.println("中转点坐标列表:");
// System.out.println(Arrays.toString(midPoint));
// }
// 将结果转换成经纬度坐标列表
ArrayList<double[]> areafinailyLonlat = new ArrayList<double[]>();
for (double[] midPoint : areaMidPointList) {
	areafinailyLonlat.add(main.mercatorToLonLat(main.reverseTransformCoordinates(main.supermarket.get(0).supermarket_mercator, this.customer_mercator, midPoint)));
}
// for (double[] lonlat : areafinailyLonlat) {
// System.out.println("最后的经纬度坐标:");
// System.out.println(Arrays.toString(lonlat));
// }

// 给order赋值
deliveryOrder.areaList = new ArrayList<Area>();
for (AreaNodE bestAreaPoint : bestAreaPointList) {
	if (bestAreaPoint.id > 0) {
		deliveryOrder.areaList.add(main.area.get((int)bestAreaPoint.id));
	}
}
// for (double[] areaPoint : areaPointList) {
// deliveryOrder.areaList.add(main.area.get((int) areaPoint[0]));
// }
// 分配task
deliveryOrder.areaTaskList = new ArrayList<AreaTask>();
if (deliveryOrder.areaList.size() == 0) {
	int areaId = main.findClosestPoint();
	deliveryOrder.areaList.add(0, main.area.get(areaId));
	AreaTask task_1 = new AreaTask(0, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, areaId, -1, main.supermarket.get(0).longitude, main.supermarket.get(0).latitude, 0, 0, false, null, null, 0, 0);
	AreaTask task_2 = new AreaTask(1, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, areaId, -1, this.longitude, this.latitude, 3, 0, false, null, null, 0, 0);
	deliveryOrder.areaTaskList.add(task_1);
	deliveryOrder.areaTaskList.add(task_2);
} else if (deliveryOrder.areaList.size() == 1) {
	AreaTask task_1 = new AreaTask(0, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, deliveryOrder.areaList.get(0).id, -1, main.supermarket.get(0).longitude, main.supermarket.get(0).latitude, 0, 0, false, null, null, 0, 0);
	AreaTask task_2 = new AreaTask(1, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, deliveryOrder.areaList.get(0).id, -1, this.longitude, this.latitude, 3, 0, false, null, null, 0, 0);
	deliveryOrder.areaTaskList.add(task_1);
	deliveryOrder.areaTaskList.add(task_2);
} else {
	for (int i = 0; i < deliveryOrder.areaList.size(); i++) {
		// task{在tasklist内的index,order的id,customer的id,货车的的id,经度坐标,纬度坐标,下一个车的id(超市:-1,客户:-2),类型:取货0,送货1,任务完成情况:0表示初始化状态，1表示前往接货，2表示到达接货点，3表示接到货物，4表示前往送货，5表示到达送货点，6表示送到货物}
		AreaTask task_1 = new AreaTask(2 * i, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, deliveryOrder.areaList.get(i).id, -1, 0.0, 0.0, -1, 0, false, null, null, 0, 0);
		AreaTask task_2 = new AreaTask(2 * i + 1, deliveryOrder.id, deliveryOrder.supermarketId, deliveryOrder.customerId, deliveryOrder.areaList.get(i).id, -1, 0.0, 0.0, -1, 0, false, null, null, 0, 0);
		if (i == 0) {
			task_1.endLongitude = main.supermarket.get(0).longitude;
			task_1.endLatitude = main.supermarket.get(0).latitude;
			task_1.type = 0;
			task_2.endLongitude = areafinailyLonlat.get(i)[0];
			task_2.endLatitude = areafinailyLonlat.get(i)[1];
			task_2.type = 2;
		} else if (i == deliveryOrder.areaList.size() - 1) {
			task_1.endLongitude = areafinailyLonlat.get(i - 1)[0];
			task_1.endLatitude = areafinailyLonlat.get(i - 1)[1];
			task_1.type = 1;
			task_2.endLongitude = this.longitude;
			task_2.endLatitude = this.latitude;
			task_2.type = 3;
		} else {
			task_1.endLongitude = areafinailyLonlat.get(i - 1)[0];
			task_1.endLatitude = areafinailyLonlat.get(i - 1)[1];
			task_1.type = 1;
			task_2.endLongitude = areafinailyLonlat.get(i)[0];
			task_2.endLatitude = areafinailyLonlat.get(i)[1];
			task_2.type = 2;
		}
		deliveryOrder.areaTaskList.add(task_1);
		deliveryOrder.areaTaskList.add(task_2);
	}
}
send(deliveryOrder, main.supermarket.get(0));]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1685929602941</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1685929610862</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1685929602947</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1685929602950</Id>
					<Name><![CDATA[person]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>-9.281</X><Y>9.376</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Curve ControlPoints="true">
					<Id>1685929602952</Id>
					<Name><![CDATA[shapeBody]]></Name>
					<X>-0.928</X><Y>-3.28</Y>
					<Label><X>-20</X><Y>28</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>1.877</Y><Z>0</Z></Point>
					   <Point><X>1.392</X><Y>0.938</Y><Z>0</Z></Point>
					   <Point><X>-0.463</X><Y>1.406</Y><Z>0</Z></Point>
					   <Point><X>-0.928</X><Y>1.406</Y><Z>0</Z></Point>
					   <Point><X>-0.928</X><Y>4.689</Y><Z>0</Z></Point>
					   <Point><X>-0.928</X><Y>5.158</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>5.158</Y><Z>0</Z></Point>
					   <Point><X>-0.463</X><Y>4.22</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>7.97</Y><Z>0</Z></Point>
					   <Point><X>0.464</X><Y>7.97</Y><Z>0</Z></Point>
					   <Point><X>1.392</X><Y>7.97</Y><Z>0</Z></Point>
					   <Point><X>1.856</X><Y>7.97</Y><Z>0</Z></Point>
					   <Point><X>2.321</X><Y>4.22</Y><Z>0</Z></Point>
					   <Point><X>1.856</X><Y>5.158</Y><Z>0</Z></Point>
					   <Point><X>2.785</X><Y>5.158</Y><Z>0</Z></Point>
					   <Point><X>2.785</X><Y>4.689</Y><Z>0</Z></Point>
					   <Point><X>2.785</X><Y>1.406</Y><Z>0</Z></Point>
					   <Point><X>2.321</X><Y>1.406</Y><Z>0</Z></Point>
					   <Point><X>0.464</X><Y>0.938</Y><Z>0</Z></Point>
					   <Point><X>1.856</X><Y>1.877</Y><Z>0</Z></Point>
					   <Point><X>1.856</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1.856</X><Y>-1.405</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-1.405</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
			</Presentation>

				</Group>
				<Text>
					<Id>1692325364000</Id>
					<Name><![CDATA[text]]></Name>
					<X>2</X><Y>-5</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[id]]></Text>
					<TextCode><![CDATA[this.id]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1685931320932</Id>
			<Name><![CDATA[Truck]]></Name>
			<Import><![CDATA[import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;]]></Import>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1685931320938</Id>
				<Name><![CDATA[1685931320938]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[velocity / 3.6]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1685952000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1685931320935</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1685931320939</CurrentLevel>
			<ConnectionsId>1685931320933</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1686106356623</Id>
					<Name><![CDATA[truck_mercator]]></Name>
					<X>160</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686292499302</Id>
					<Name><![CDATA[deliveryOrderList]]></Name>
					<X>160</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<DeliveryOrder>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<DeliveryOrder>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686293557920</Id>
					<Name><![CDATA[currentOrder]]></Name>
					<X>310</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[DeliveryOrder]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686641417603</Id>
					<Name><![CDATA[startLonLat]]></Name>
					<X>160</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689831325083</Id>
					<Name><![CDATA[totalDistance]]></Name>
					<X>160</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689833603877</Id>
					<Name><![CDATA[totalWaitTime]]></Name>
					<X>160</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1689833716121</Id>
					<Name><![CDATA[totalWorkTime]]></Name>
					<X>160</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690439442674</Id>
					<Name><![CDATA[type0TaskList]]></Name>
					<X>310</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690439448066</Id>
					<Name><![CDATA[type1TaskList]]></Name>
					<X>310</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690439451822</Id>
					<Name><![CDATA[type2TaskList]]></Name>
					<X>310</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690439455436</Id>
					<Name><![CDATA[type3TaskList]]></Name>
					<X>310</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690526486226</Id>
					<Name><![CDATA[currentAreaTask]]></Name>
					<X>310</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[AreaTask]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690527737859</Id>
					<Name><![CDATA[currentStrategy]]></Name>
					<Description><![CDATA[当前策略012]]></Description>
					<X>310</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690790763911</Id>
					<Name><![CDATA[currentArea]]></Name>
					<X>310</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Area]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692085437343</Id>
					<Name><![CDATA[checkWaitTime]]></Name>
					<Description><![CDATA[当前策略012]]></Description>
					<X>310</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692605227571</Id>
					<Name><![CDATA[beforeAreaTask]]></Name>
					<X>460</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[AreaTask]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692605245899</Id>
					<Name><![CDATA[afterAreaTask]]></Name>
					<X>590</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[AreaTask]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692605255723</Id>
					<Name><![CDATA[beforeArea]]></Name>
					<X>460</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Area]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692605267627</Id>
					<Name><![CDATA[afterArea]]></Name>
					<X>590</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Area]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692606669677</Id>
					<Name><![CDATA[afterTruck]]></Name>
					<X>590</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Truck]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692606688674</Id>
					<Name><![CDATA[beforeTruck]]></Name>
					<X>460</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Truck]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692669251701</Id>
					<Name><![CDATA[currentMsg]]></Name>
					<X>460</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[AreaTask]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1692670237750</Id>
					<Name><![CDATA[type2TaskResponseList]]></Name>
					<X>460</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1685931320961</Id>
					<Name><![CDATA[id]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690352899885</Id>
					<Name><![CDATA[areaId]]></Name>
					<X>10</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690352899883</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685931320963</Id>
					<Name><![CDATA[administrativeDistrict]]></Name>
					<X>10</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1686638675011</Id>
					<Name><![CDATA[street]]></Name>
					<X>10</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1686638675009</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685931320965</Id>
					<Name><![CDATA[longitude]]></Name>
					<X>10</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685931320967</Id>
					<Name><![CDATA[latitude]]></Name>
					<X>10</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1688542325308</Id>
					<Name><![CDATA[type]]></Name>
					<X>10</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1688542325306</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1688542338504</Id>
					<Name><![CDATA[activityRadius]]></Name>
					<X>10</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1688542338502</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1688542370921</Id>
					<Name><![CDATA[velocity]]></Name>
					<X>10</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1688542370919</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1686120327153</Id>
					<Name><![CDATA[totalPosition]]></Name>
					<X>10</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1686120327151</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690353556533</Id>
					<Name><![CDATA[usedPosition]]></Name>
					<X>10</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1690353556531</Id>
							<Label><![CDATA[usedPosition]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<StatechartElements>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695227</Id>
					<Name><![CDATA[stillness]]></Name>
					<X>570</X><Y>420</Y>
					<Label><X>25</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentOrder = null;
currentAreaTask = null;
beforeAreaTask = null;
afterAreaTask = null;
beforeArea = null;
afterArea = null;
beforeTruck = null;
afterTruck = null;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695229</Id>
					<Name><![CDATA[ready_for_mission]]></Name>
					<X>570</X><Y>500</Y>
					<Label><X>-5</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentOrder = null;
currentAreaTask = null;
beforeAreaTask = null;
afterAreaTask = null;
beforeArea = null;
afterArea = null;
beforeTruck = null;
afterTruck = null;
if (usedPosition < totalPosition * 1 / 3) {
	// 0:订单取货;1:交接取货;2:交接送货;3:客户送货
	if (type1TaskList.size() > 0) {
		currentAreaTask = type1TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
		beforeArea = main.area.get(beforeAreaTask.areaId);
		beforeTruck = main.trucks.get(beforeAreaTask.truckId);
		truckLink.send(beforeAreaTask, beforeTruck);
	} else if (type0TaskList.size() > 0) {
		currentAreaTask = type0TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
	} else if (type2TaskResponseList.size() > 0) {
		currentAreaTask = type2TaskResponseList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
		afterArea = main.area.get(afterAreaTask.areaId);
		if (afterAreaTask.truckId != -1) {
			afterTruck = main.trucks.get(afterAreaTask.truckId);
		}
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		}
	} else if (type2TaskList.size() > 0) {
		currentAreaTask = type2TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
		afterArea = main.area.get(afterAreaTask.areaId);
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		} else {
			if (afterAreaTask.truckId != -1) {
				afterTruck = main.trucks.get(afterAreaTask.truckId);
			}
			if (!afterArea.deliveryOrderList.contains(currentOrder)) {
				send(currentOrder, afterArea);
			}
		}
	} else if (type3TaskList.size() > 0) {
		// Map<Integer, Integer> idCount = new HashMap<>();
		// for (AreaTask type3Task : type3TaskList) {
		// idCount.put(type3Task.customerId, idCount.getOrDefault(type3Task.customerId, 0) + 1);
		// }
		// int mostCommonId = 0;
		// int maxCount = 0;
		// for (Map.Entry<Integer, Integer> entry : idCount.entrySet()) {
		// if (entry.getValue() > maxCount) {
		// mostCommonId = entry.getKey();
		// maxCount = entry.getValue();
		// }
		// }
		// for (AreaTask type3Task : type3TaskList) {
		// if (type3Task.customerId == mostCommonId) {
		// currentAreaTask = type3Task;
		// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		// }
		// }
		currentAreaTask = type3TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		}
	}
	currentStrategy = 0;
} else if (usedPosition >= totalPosition * 1 / 3 && usedPosition <= totalPosition * 2 / 3) {
	if (currentStrategy == 0) {
		// 0:订单取货;1:交接取货;2:交接送货;3:客户送货
		if (type1TaskList.size() > 0) {
			currentAreaTask = type1TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			beforeArea = main.area.get(beforeAreaTask.areaId);
			beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			truckLink.send(beforeAreaTask, beforeTruck);
		} else if (type0TaskList.size() > 0) {
			currentAreaTask = type0TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		} else if (type2TaskResponseList.size() > 0) {
			currentAreaTask = type2TaskResponseList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
			afterArea = main.area.get(afterAreaTask.areaId);
			if (afterAreaTask.truckId != -1) {
				afterTruck = main.trucks.get(afterAreaTask.truckId);
			}
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			}
		} else if (type2TaskList.size() > 0) {
			currentAreaTask = type2TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
			afterArea = main.area.get(afterAreaTask.areaId);
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			} else {
				if (afterAreaTask.truckId != -1) {
					afterTruck = main.trucks.get(afterAreaTask.truckId);
				}
				if (!afterArea.deliveryOrderList.contains(currentOrder)) {
					send(currentOrder, afterArea);
				}
			}
		} else if (type3TaskList.size() > 0) {
			// Map<Integer, Integer> idCount = new HashMap<>();
			// for (AreaTask type3Task : type3TaskList) {
			// idCount.put(type3Task.customerId, idCount.getOrDefault(type3Task.customerId, 0) + 1);
			// }
			// int mostCommonId = 0;
			// int maxCount = 0;
			// for (Map.Entry<Integer, Integer> entry : idCount.entrySet()) {
			// if (entry.getValue() > maxCount) {
			// mostCommonId = entry.getKey();
			// maxCount = entry.getValue();
			// }
			// }
			// for (AreaTask type3Task : type3TaskList) {
			// if (type3Task.customerId == mostCommonId) {
			// currentAreaTask = type3Task;
			// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			// }
			// }
			currentAreaTask = type3TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			}
		}
	} else if (currentStrategy == 1) {
		// 0:订单取货;1:交接取货;2:交接送货;3:客户送货
		if (type2TaskResponseList.size() > 0) {
			currentAreaTask = type2TaskResponseList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
			afterArea = main.area.get(afterAreaTask.areaId);
			if (afterAreaTask.truckId != -1) {
				afterTruck = main.trucks.get(afterAreaTask.truckId);
			}
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			}
		} else if (type2TaskList.size() > 0) {
			currentAreaTask = type2TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
			afterArea = main.area.get(afterAreaTask.areaId);
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			} else {
				if (afterAreaTask.truckId != -1) {
					afterTruck = main.trucks.get(afterAreaTask.truckId);
				}
				if (!afterArea.deliveryOrderList.contains(currentOrder)) {
					send(currentOrder, afterArea);
				}
			}
		} else if (type3TaskList.size() > 0) {
			// Map<Integer, Integer> idCount = new HashMap<>();
			// for (AreaTask type3Task : type3TaskList) {
			// idCount.put(type3Task.customerId, idCount.getOrDefault(type3Task.customerId, 0) + 1);
			// }
			// int mostCommonId = 0;
			// int maxCount = 0;
			// for (Map.Entry<Integer, Integer> entry : idCount.entrySet()) {
			// if (entry.getValue() > maxCount) {
			// mostCommonId = entry.getKey();
			// maxCount = entry.getValue();
			// }
			// }
			// for (AreaTask type3Task : type3TaskList) {
			// if (type3Task.customerId == mostCommonId) {
			// currentAreaTask = type3Task;
			// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			// }
			// }
			currentAreaTask = type3TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			if (currentAreaTask.isGot == false) {
				currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				if (currentAreaTask.type == 1) {
					currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
					beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
					beforeArea = main.area.get(beforeAreaTask.areaId);
					beforeTruck = main.trucks.get(beforeAreaTask.truckId);
				}
			}
		} else if (type1TaskList.size() > 0) {
			currentAreaTask = type1TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
			beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			beforeArea = main.area.get(beforeAreaTask.areaId);
			beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			truckLink.send(beforeAreaTask, beforeTruck);
		} else if (type0TaskList.size() > 0) {
			currentAreaTask = type0TaskList.get(0);
			currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		}
	}
} else if (usedPosition >= totalPosition * 2 / 3 && usedPosition <= totalPosition) {
	// 0:订单取货;1:交接取货;2:交接送货;3:客户送货
	if (type2TaskResponseList.size() > 0) {
		currentAreaTask = type2TaskResponseList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
		afterArea = main.area.get(afterAreaTask.areaId);
		if (afterAreaTask.truckId != -1) {
			afterTruck = main.trucks.get(afterAreaTask.truckId);
		}
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		}
	} else if (type2TaskList.size() > 0) {
		currentAreaTask = type2TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		afterAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index + 1);
		afterArea = main.area.get(afterAreaTask.areaId);
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		} else {
			if (afterAreaTask.truckId != -1) {
				afterTruck = main.trucks.get(afterAreaTask.truckId);
			}
			if (!afterArea.deliveryOrderList.contains(currentOrder)) {
				send(currentOrder, afterArea);
			}
		}
	} else if (type3TaskList.size() > 0) {
		// Map<Integer, Integer> idCount = new HashMap<>();
		// for (AreaTask type3Task : type3TaskList) {
		// idCount.put(type3Task.customerId, idCount.getOrDefault(type3Task.customerId, 0) + 1);
		// }
		// int mostCommonId = 0;
		// int maxCount = 0;
		// for (Map.Entry<Integer, Integer> entry : idCount.entrySet()) {
		// if (entry.getValue() > maxCount) {
		// mostCommonId = entry.getKey();
		// maxCount = entry.getValue();
		// }
		// }
		// for (AreaTask type3Task : type3TaskList) {
		// if (type3Task.customerId == mostCommonId) {
		// currentAreaTask = type3Task;
		// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		// }
		// }
		currentAreaTask = type3TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		if (currentAreaTask.isGot == false) {
			currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
			if (currentAreaTask.type == 1) {
				currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
				beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
				beforeArea = main.area.get(beforeAreaTask.areaId);
				beforeTruck = main.trucks.get(beforeAreaTask.truckId);
			}
		}
	} else if (type1TaskList.size() > 0) {
		currentAreaTask = type1TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
		beforeAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
		beforeArea = main.area.get(beforeAreaTask.areaId);
		beforeTruck = main.trucks.get(beforeAreaTask.truckId);
		truckLink.send(beforeAreaTask, beforeTruck);
	} else if (type0TaskList.size() > 0) {
		currentAreaTask = type0TaskList.get(0);
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
	}
	currentStrategy = 1;
}
// else if (usedPosition == totalPosition) {
// if (type0TaskList.size() > 0) {
// currentAreaTask = type0TaskList.get(0);
// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
// } else if (type2TaskList.size() > 0) {
// currentAreaTask = type2TaskList.get(0);
// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
// if (currentAreaTask.isGot == false) {
// currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
// }
// } else if (type3TaskList.size() > 0) {
// Map<Integer, Integer> idCount = new HashMap<>();
// for (AreaTask type3Task : type3TaskList) {
// idCount.put(type3Task.customerId, idCount.getOrDefault(type3Task.customerId, 0) + 1);
// }
// int mostCommonId = 0;
// int maxCount = 0;
// for (Map.Entry<Integer, Integer> entry : idCount.entrySet()) {
// if (entry.getValue() > maxCount) {
// mostCommonId = entry.getKey();
// maxCount = entry.getValue();
// }
// }
// for (AreaTask type3Task : type3TaskList) {
// if (type3Task.customerId == mostCommonId) {
// currentAreaTask = type3Task;
// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
// }
// }
// currentAreaTask = type3TaskList.get(0);
// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
// if (currentAreaTask.isGot == false) {
// currentAreaTask = currentOrder.areaTaskList.get(currentAreaTask.index - 1);
// }
// } else if (type1TaskList.size() > 0) {
// currentAreaTask = type1TaskList.get(0);
// currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
// }
// }
currentAreaTask.startTime = date();
startLonLat = new double[]{this.getLongitude(), this.getLatitude()};]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="Branch" ParentState="ROOT_NODE">
					<Id>1690443695231</Id>
					<Name><![CDATA[branch2]]></Name>
					<X>620</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Properties>	
						<Action><![CDATA[if (currentAreaTask.type == 1 && currentAreaTask.state == 2 && currentAreaTask.isGot == false) {
	System.out.println("==========异常case START==========");
	System.out.println("truckId:" + this.id);
	System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	System.out.println("==========Order START==========");
	DeliveryOrder order = findOrderById(currentAreaTask.orderId);
	System.out.println("order.id:" + order.id);
	System.out.println("order.state:" + order.state);
	System.out.println("==========Order END==========");
	System.out.println("==========areaTaskList START==========");
	for (AreaTask areaTask : order.areaTaskList) {
		System.out.println("areaTask.index:" + areaTask.index);
		System.out.println("areaTask.orderId:" + areaTask.orderId);
		System.out.println("areaTask.areaId:" + areaTask.areaId);
		System.out.println("areaTask.truckId:" + areaTask.truckId);
		System.out.println("areaTask.type:" + areaTask.type);
		System.out.println("areaTask.state:" + areaTask.state);
		System.out.println("areaTask.isGot:" + areaTask.isGot);
	}
	System.out.println("==========areaTaskList END==========");
	System.out.println("==========异常case END==========");
	if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index - 1).state == 3) {
		if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index + 1).state == 3) {
			currentAreaTask.state = 3;
			currentAreaTask.isGot = false;
			if (currentAreaTask.startTime == null) {
				currentAreaTask.startTime = date();
			}
			if (currentAreaTask.endTime == null) {
				currentAreaTask.endTime = date();
			}
		} else if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index + 1).state != 3) {
			currentAreaTask.state = 0;
			currentAreaTask.startTime = null;
		}
	} else if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index - 1).state != 3) {
		currentAreaTask.state = 0;
		currentAreaTask.startTime = null;
	}
	if (type1TaskList.size() > 2) {
		currentAreaTask = type1TaskList.get(1);
		currentAreaTask.startTime = date();
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
	}else {
		currentAreaTask = type1TaskList.get(0);
		currentAreaTask.startTime = date();
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);	
	}
}
if (currentAreaTask.type == 2 && currentAreaTask.state == 2 && currentAreaTask.isGot == true) {
	System.out.println("==========异常case START==========");
	System.out.println("truckId:" + this.id);
	System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	System.out.println("==========Order START==========");
	DeliveryOrder order = findOrderById(currentAreaTask.orderId);
	System.out.println("order.id:" + order.id);
	System.out.println("order.state:" + order.state);
	System.out.println("==========Order END==========");
	System.out.println("==========areaTaskList START==========");
	for (AreaTask areaTask : order.areaTaskList) {
		System.out.println("areaTask.index:" + areaTask.index);
		System.out.println("areaTask.orderId:" + areaTask.orderId);
		System.out.println("areaTask.areaId:" + areaTask.areaId);
		System.out.println("areaTask.truckId:" + areaTask.truckId);
		System.out.println("areaTask.type:" + areaTask.type);
		System.out.println("areaTask.state:" + areaTask.state);
		System.out.println("areaTask.isGot:" + areaTask.isGot);
	}
	System.out.println("==========areaTaskList END==========");
	System.out.println("==========异常case END==========");
	if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index + 1).state == 3) {
		currentAreaTask.state = 3;
		currentAreaTask.isGot = false;
		if (currentAreaTask.startTime == null) {
			currentAreaTask.startTime = date();
		}
		if (currentAreaTask.endTime == null) {
			currentAreaTask.endTime = date();
		}
	} else if (findOrderById(currentAreaTask.orderId).areaTaskList.get(currentAreaTask.index + 1).state != 3) {
		currentAreaTask.state = 0;
		currentAreaTask.startTime = null;
	}
	if (type2TaskList.size() > 2) {
		currentAreaTask = type2TaskList.get(1);
		currentAreaTask.startTime = date();
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
	} else {
		currentAreaTask = type2TaskList.get(0);
		currentAreaTask.startTime = date();
		currentOrder = main.deliveryOrderList.get(currentAreaTask.orderId);
	}
}
]]></Action>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695233</Id>
					<Name><![CDATA[moveTo_type_1]]></Name>
					<X>170</X><Y>620</Y>
					<Label><X>0</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 1;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695235</Id>
					<Name><![CDATA[at_receive1]]></Name>
					<X>170</X><Y>700</Y>
					<Label><X>18</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 2;
checkWaitTime = 0;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695237</Id>
					<Name><![CDATA[work_1]]></Name>
					<X>170</X><Y>780</Y>
					<Label><X>25</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[if ((currentAreaTask.state == 2 && currentAreaTask.isGot == false) && (currentOrder.areaTaskList.get(currentAreaTask.index - 1).state == 2 && currentOrder.areaTaskList.get(currentAreaTask.index - 1).isGot == true)) {
	// 当前车的成本计算
	currentAreaTask.endTime = date();
	int length_current = 0;
	for (DeliveryOrder order : deliveryOrderList) {
		if (order.state != 3) {
			length_current++;
		}
	}
	double distance_current = main.map.getDistanceByRoute(startLonLat[1], startLonLat[0], currentAreaTask.endLatitude, currentAreaTask.endLongitude);
	double time_current = dateToTime(currentAreaTask.endTime) - dateToTime(currentAreaTask.startTime);
	this.totalDistance += distance_current;
	this.totalWorkTime += time_current;
	double cost_current = (distance_current / 1000.0 * main.distanceEnergyConsumption) / length_current + time_current * (main.laborRate + main.depreciationRate) / length_current;
	currentOrder.totalDistance += distance_current;
	currentOrder.totalCost += cost_current;
	Set<Integer> orderIdSet_current = new HashSet<>();
	for (AreaTask areaTask : type0TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_current.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type1TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_current.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type2TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_current.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type3TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_current.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3) {
			order.totalCost += cost_current;
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3 && orderIdSet_current.contains(order.id)) {
			order.totalDistance += distance_current;
		}
	}

	// 上一辆车的成本计算
	Truck beforeTruck = main.trucks.get(currentOrder.areaTaskList.get(currentAreaTask.index - 1).truckId);
	beforeTruck.currentAreaTask.endTime = date();
	int length_before = 0;
	for (DeliveryOrder order : beforeTruck.deliveryOrderList) {
		if (order.state != 3) {
			length_before++;
		}
	}
	double distance_before = main.map.getDistanceByRoute(beforeTruck.startLonLat[1], beforeTruck.startLonLat[0], beforeTruck.currentAreaTask.endLatitude, beforeTruck.currentAreaTask.endLongitude);
	double time_before = dateToTime(beforeTruck.currentAreaTask.endTime) - dateToTime(beforeTruck.currentAreaTask.startTime);
	beforeTruck.totalDistance += distance_before;
	beforeTruck.totalWorkTime += time_before;
	double cost_before = (distance_before / 1000.0 * main.distanceEnergyConsumption) / length_before + time_before * (main.laborRate + main.depreciationRate) / length_before;
	beforeTruck.currentOrder.totalDistance += distance_before;
	beforeTruck.currentOrder.totalCost += cost_before;
	Set<Integer> orderIdSet_before = new HashSet<>();
	for (AreaTask areaTask : beforeTruck.type0TaskList) {
		if (!areaTask.equals(beforeTruck.currentAreaTask) && areaTask.isGot == true && beforeTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : beforeTruck.type1TaskList) {
		if (!areaTask.equals(beforeTruck.currentAreaTask) && areaTask.isGot == true && beforeTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : beforeTruck.type2TaskList) {
		if (!areaTask.equals(beforeTruck.currentAreaTask) && areaTask.isGot == true && beforeTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : beforeTruck.type3TaskList) {
		if (!areaTask.equals(beforeTruck.currentAreaTask) && areaTask.isGot == true && beforeTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : beforeTruck.deliveryOrderList) {
		if (!order.equals(beforeTruck.currentOrder) && order.state != 3) {
			order.totalCost += cost_before;
		}
	}
	for (DeliveryOrder order : beforeTruck.deliveryOrderList) {
		if (!order.equals(beforeTruck.currentOrder) && order.state != 3 && orderIdSet_before.contains(order.id)) {
			order.totalDistance += distance_before;
		}
	}
}]]></EntryAction>
						<ExitAction><![CDATA[// if (currentAreaTask.state != 3) {
if ((currentAreaTask.state == 2 && currentAreaTask.isGot == false) && (currentOrder.areaTaskList.get(currentAreaTask.index - 1).state == 2 && currentOrder.areaTaskList.get(currentAreaTask.index - 1).isGot == true)) {
	Truck exchangeTruck = main.trucks.get(currentOrder.areaTaskList.get(currentAreaTask.index - 1).truckId);
	ArrayList<AreaTask> areaTaskToReceiveList = new ArrayList<AreaTask>();
	areaTaskToReceiveList.add(currentAreaTask);
	for (AreaTask areaTask : type1TaskList) {
		AreaTask beforeAreaTask = findOrderById(areaTask.orderId).areaTaskList.get(areaTask.index - 1);
		if (!areaTask.equals(currentAreaTask) && areaTask.state == 0 && areaTask.isGot == false && beforeAreaTask.truckId == exchangeTruck.id && beforeAreaTask.state == 0 && beforeAreaTask.isGot == true) {
			areaTaskToReceiveList.add(areaTask);
		}
	}
	ArrayList<AreaTask> areaTaskToDeliveryList = new ArrayList<AreaTask>();
	for (AreaTask areaTask : type2TaskList) {
		AreaTask afterAreaTask = findOrderById(areaTask.orderId).areaTaskList.get(areaTask.index + 1);
		if (areaTask.state == 0 && areaTask.isGot == true && afterAreaTask.state == 0 && afterAreaTask.isGot == false && ((afterAreaTask.truckId == -1 && afterAreaTask.areaId == exchangeTruck.areaId) || (afterAreaTask.truckId != -1 && afterAreaTask.truckId == exchangeTruck.id))) {
			areaTaskToDeliveryList.add(areaTask);
		}
	}
	int areaTaskToReceiveNum = areaTaskToReceiveList.size();
	int areaTaskToDeliveryNum = areaTaskToDeliveryList.size();
	int areaTaskToReceiveExecutionNum = 0;
	int areaTaskToDeliveryExecutionNum = 0;
	if (areaTaskToReceiveNum - areaTaskToDeliveryNum > 0) {
		if (this.totalPosition - this.usedPosition >= areaTaskToReceiveNum - areaTaskToDeliveryNum) {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.usedPosition + areaTaskToReceiveNum - areaTaskToDeliveryNum;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition + areaTaskToDeliveryNum - areaTaskToReceiveNum;
		} else {
			areaTaskToReceiveExecutionNum = areaTaskToDeliveryNum + this.totalPosition - this.usedPosition;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.totalPosition;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition - this.totalPosition + this.usedPosition;
		}
	} else if (areaTaskToReceiveNum - areaTaskToDeliveryNum == 0) {
		areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
		areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
	} else if (areaTaskToReceiveNum - areaTaskToDeliveryNum < 0) {
		if (exchangeTruck.totalPosition - exchangeTruck.usedPosition >= areaTaskToDeliveryNum - areaTaskToReceiveNum) {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.usedPosition + areaTaskToReceiveNum - areaTaskToDeliveryNum;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition + areaTaskToDeliveryNum - areaTaskToReceiveNum;
		} else {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToReceiveNum + exchangeTruck.totalPosition - exchangeTruck.usedPosition;
			this.usedPosition = this.usedPosition - exchangeTruck.totalPosition + exchangeTruck.usedPosition;
			exchangeTruck.usedPosition = exchangeTruck.totalPosition;
		}
	}
	for (int i = 0; i < areaTaskToReceiveExecutionNum; i++) {
		AreaTask areaTask = areaTaskToReceiveList.get(i);
		DeliveryOrder order = findOrderById(areaTask.orderId);
		if (areaTask.startTime == null) {
			areaTask.startTime = date();
		}
		if (areaTask.endTime == null) {
			areaTask.endTime = date();
		}
		areaTask.state = 3;
		areaTask.isGot = true;
		order.areaTaskList.get(areaTask.index + 1).state = 0;
		order.areaTaskList.get(areaTask.index + 1).isGot = true;
		order.areaTaskList.get(areaTask.index - 1).state = 3;
		order.areaTaskList.get(areaTask.index - 1).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 1).startTime == null) {
			order.areaTaskList.get(areaTask.index - 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 1).endTime == null) {
			order.areaTaskList.get(areaTask.index - 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index - 2).state = 3;
		order.areaTaskList.get(areaTask.index - 2).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 2).startTime == null) {
			order.areaTaskList.get(areaTask.index - 2).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 2).endTime == null) {
			order.areaTaskList.get(areaTask.index - 2).endTime = date();
		}
	}
	for (int i = 0; i < areaTaskToDeliveryExecutionNum; i++) {
		AreaTask areaTask = areaTaskToDeliveryList.get(i);
		DeliveryOrder order = findOrderById(areaTask.orderId);
		if (areaTask.startTime == null) {
			areaTask.startTime = date();
		}
		if (areaTask.endTime == null) {
			areaTask.endTime = date();
		}
		areaTask.state = 3;
		areaTask.isGot = false;
		order.areaTaskList.get(areaTask.index - 1).state = 3;
		order.areaTaskList.get(areaTask.index - 1).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 1).startTime == null) {
			order.areaTaskList.get(areaTask.index - 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 1).endTime == null) {
			order.areaTaskList.get(areaTask.index - 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index + 1).state = 3;
		order.areaTaskList.get(areaTask.index + 1).isGot = true;
		if (order.areaTaskList.get(areaTask.index + 1).startTime == null) {
			order.areaTaskList.get(areaTask.index + 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index + 1).endTime == null) {
			order.areaTaskList.get(areaTask.index + 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index + 2).state = 0;
		order.areaTaskList.get(areaTask.index + 2).isGot = true;
		if (order.areaTaskList.get(areaTask.index + 1).truckId == -1) {
			order.areaTaskList.get(areaTask.index + 1).truckId = exchangeTruck.id;
			order.areaTaskList.get(areaTask.index + 2).truckId = exchangeTruck.id;
			send(order, exchangeTruck);
		}
	}
	startLonLat = new double[]{this.getLongitude(), this.getLatitude()};
} else {
	// System.out.println("==========work_1异常 START==========");
	// System.out.println("truckId:" + this.id);
	// System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	// System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	// System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	// System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	// System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	// System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	// System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).index:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).index);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).orderId:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).orderId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).areaId:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).areaId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).truckId:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).truckId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).type:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).type);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).state:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).state);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index - 1).isGot:" + currentOrder.areaTaskList.get(currentAreaTask.index - 1).isGot);
	// System.out.println("==========work_1异常 END==========");
}]]></ExitAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="Branch" ParentState="ROOT_NODE">
					<Id>1690443695241</Id>
					<Name><![CDATA[branch4]]></Name>
					<X>890</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Properties>	
						<Action><![CDATA[ArrayList<AreaTask> removeType0TaskList = new ArrayList<AreaTask>();
ArrayList<AreaTask> removeType1TaskList = new ArrayList<AreaTask>();
ArrayList<AreaTask> removeType2TaskList = new ArrayList<AreaTask>();
ArrayList<AreaTask> removeType3TaskList = new ArrayList<AreaTask>();
for (DeliveryOrder order : deliveryOrderList) {
	for (AreaTask areaTask : order.areaTaskList) {
		if (areaTask.truckId == this.id) {
			if (areaTask.type == 0 && areaTask.state == 3) {
				removeType0TaskList.add(areaTask);
			}
			if (areaTask.type == 1 && areaTask.state == 3) {
				removeType1TaskList.add(areaTask);
			}
			if (areaTask.type == 2 && areaTask.state == 3) {
				removeType2TaskList.add(areaTask);
			}
			if (areaTask.type == 3 && areaTask.state == 3) {
				removeType3TaskList.add(areaTask);
			}
		}
	}
}
// System.out.println("truckId:" + this.id);
// System.out.println("removeType0TaskList:" + removeType0TaskList.size());
// System.out.println("removeType1TaskList:" + removeType1TaskList.size());
// System.out.println("removeType2TaskList:" + removeType2TaskList.size());
// System.out.println("removeType3TaskList:" + removeType3TaskList.size());
// System.out.println("==========removeType3TaskList START==========");
// for (AreaTask areaTask : removeType3TaskList) {
// System.out.println("areaTask.index:" + areaTask.index);
// System.out.println("areaTask.orderId:" + areaTask.orderId);
// System.out.println("areaTask.truckId:" + areaTask.truckId);
// System.out.println("areaTask.type:" + areaTask.type);
// System.out.println("areaTask.state:" + areaTask.state);
// System.out.println("areaTask.isGot:" + areaTask.isGot);
// }
// System.out.println("==========removeType3TaskList END==========");
// System.out.println("==========type3TaskList START==========");
// for (AreaTask areaTask : type3TaskList) {
// System.out.println("areaTask.index:" + areaTask.index);
// System.out.println("areaTask.orderId:" + areaTask.orderId);
// System.out.println("areaTask.truckId:" + areaTask.truckId);
// System.out.println("areaTask.type:" + areaTask.type);
// System.out.println("areaTask.state:" + areaTask.state);
// System.out.println("areaTask.isGot:" + areaTask.isGot);
// }
// System.out.println("==========type3TaskList END==========");
type0TaskList.removeAll(removeType0TaskList);
type1TaskList.removeAll(removeType1TaskList);
type2TaskList.removeAll(removeType2TaskList);
type2TaskResponseList.removeAll(removeType2TaskList);
type3TaskList.removeAll(removeType3TaskList);
// System.out.println("type0TaskList:" + type0TaskList.size());
// System.out.println("type1TaskList:" + type1TaskList.size());
// System.out.println("type2TaskList:" + type2TaskList.size());
// System.out.println("type3TaskList:" + type3TaskList.size());
// ArrayList removeDeliveryOrderList = new ArrayList<DeliveryOrder>();
// for (DeliveryOrder order : deliveryOrderList) {
// if (order.state == 3) {
// removeDeliveryOrderList.add(order);
// }
// }
// System.out.println("removeDeliveryOrderList:"+removeDeliveryOrderList.size());
// deliveryOrderList.removeAll(removeDeliveryOrderList);
// System.out.println("deliveryOrderList:"+deliveryOrderList.size());]]></Action>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695243</Id>
					<Name><![CDATA[moveTo_type_0]]></Name>
					<X>20</X><Y>620</Y>
					<Label><X>0</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 1;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695245</Id>
					<Name><![CDATA[at_deliver0]]></Name>
					<X>20</X><Y>700</Y>
					<Label><X>20</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 2;
checkWaitTime = 0;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695247</Id>
					<Name><![CDATA[work_0]]></Name>
					<X>20</X><Y>780</Y>
					<Label><X>25</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[if (currentAreaTask.state != 3) {
	currentAreaTask.endTime = date();
	int length = 0;
	for (DeliveryOrder order : deliveryOrderList) {
		if (order.state != 3) {
			length++;
		}
	}
	double distance = main.map.getDistanceByRoute(startLonLat[1], startLonLat[0], currentAreaTask.endLatitude, currentAreaTask.endLongitude);
	double time = dateToTime(currentAreaTask.endTime) - dateToTime(currentAreaTask.startTime);
	this.totalDistance += distance;
	this.totalWorkTime += time;
	double cost = (distance / 1000.0 * main.distanceEnergyConsumption) / length + time * (main.laborRate + main.depreciationRate) / length;
	currentOrder.totalDistance += distance;
	currentOrder.totalCost += cost;
	Set<Integer> orderIdSet = new HashSet<>();
	for (AreaTask areaTask : type0TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type1TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type2TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type3TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3) {
			order.totalCost += cost;
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3 && orderIdSet.contains(order.id)) {
			order.totalDistance += distance;
		}
	}
}]]></EntryAction>
						<ExitAction><![CDATA[if (currentAreaTask.state != 3) {
	for (AreaTask areaTask : type0TaskList) {
		if (areaTask.supermarketId == currentAreaTask.supermarketId && areaTask.isGot == false) {
			areaTask.state = 3;
			areaTask.isGot = true;
			if (areaTask.startTime == null) {
				areaTask.startTime = date();
			}
			if (areaTask.endTime == null) {
				areaTask.endTime = date();
			}
			DeliveryOrder order = findOrderById(areaTask.orderId);
			order.state = 2;
			order.areaTaskList.get(1).state = 0;
			order.areaTaskList.get(1).isGot = true;
		}
	}
	startLonLat = new double[]{this.getLongitude(), this.getLatitude()};
}]]></ExitAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690443695249</Id>
					<Name><![CDATA[异常]]></Name>
					<X>750</X><Y>580</Y>
					<Label><X>35</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[// System.out.println("currentOrder");
// System.out.println("currentOrder.id:" + currentOrder.id);
// System.out.println("currentOrder.customer_id:" + currentOrder.creationTime);
// System.out.println("currentOrder.administrativeDistrict:" + currentOrder.administrativeDistrict);
// System.out.println("currentOrder.street:" + currentOrder.street);
// System.out.println("currentOrder.longitude:" + currentOrder.longitude);
// System.out.println("currentOrder.latitude:" + currentOrder.latitude);
// System.out.println("currentOrder.totalDistance:" + currentOrder.totalDistance);
// System.out.println("currentOrder.completionTime:" + currentOrder.completionTime);
// System.out.println("currentOrder.totalCost:" + currentOrder.totalCost);
// System.out.println("currentOrder.state:" + currentOrder.state);
// System.out.println("currentTask");
// System.out.println("currentTask.index:" + currentTask.index);
// System.out.println("currentTask.orderId:" + currentTask.orderId);
// System.out.println("currentTask.customerId:" + currentTask.customerId);
// System.out.println("currentTask.truckId:" + currentTask.truckId);
// System.out.println("currentTask.longitude:" + currentTask.longitude);
// System.out.println("currentTask.latitude:" + currentTask.latitude);
// System.out.println("currentTask.nextTruckId:" + currentTask.nextTruckId);
// System.out.println("currentTask.type:" + currentTask.type);
// System.out.println("currentTask.state:" + currentTask.state);
// System.out.println("currentTask.isGot:" + currentTask.isGot);
// System.out.println("currentTask.isGot:" + currentTask.startTime);
// System.out.println("currentTask.isGot:" + currentTask.endTime);
// System.out.println("currentTask.isGot:" + currentTask.distance);
// for (Task task : currentOrder.taskList) {
// System.out.println("currentTask");
// System.out.println("task.index:" + task.index);
// System.out.println("task.orderId:" + task.orderId);
// System.out.println("task.customerId:" + task.customerId);
// System.out.println("task.truckId:" + task.truckId);
// System.out.println("task.longitude:" + task.longitude);
// System.out.println("task.latitude:" + task.latitude);
// System.out.println("task.nextTruckId:" + task.nextTruckId);
// System.out.println("task.type:" + task.type);
// System.out.println("task.state:" + task.state);
// System.out.println("task.isGot:" + task.isGot);
// System.out.println("task.isGot:" + task.startTime);
// System.out.println("task.isGot:" + task.endTime);
// System.out.println("task.isGot:" + task.distance);
// }
System.out.println("==========异常状态 START==========");
System.out.println("truckId:" + this.id);
System.out.println("currentAreaTask.index:" + currentAreaTask.index);
System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
System.out.println("currentAreaTask.type:" + currentAreaTask.type);
System.out.println("currentAreaTask.state:" + currentAreaTask.state);
System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
System.out.println("==========Order START==========");
DeliveryOrder order = findOrderById(currentAreaTask.orderId);
System.out.println("order.id:" + order.id);
System.out.println("order.state:" + order.state);
System.out.println("==========Order END==========");
System.out.println("==========areaTaskList START==========");

for (AreaTask areaTask : order.areaTaskList) {
	System.out.println("areaTask.index:" + areaTask.index);
	System.out.println("areaTask.orderId:" + areaTask.orderId);
	System.out.println("areaTask.areaId:" + areaTask.areaId);
	System.out.println("areaTask.truckId:" + areaTask.truckId);
	System.out.println("areaTask.type:" + areaTask.type);
	System.out.println("areaTask.state:" + areaTask.state);
	System.out.println("areaTask.isGot:" + areaTask.isGot);
}
System.out.println("==========areaTaskList END==========");

System.out.println("==========异常状态 END==========");]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444603061</Id>
					<Name><![CDATA[moveTo_type_3]]></Name>
					<X>490</X><Y>620</Y>
					<Label><X>0</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 1;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444603063</Id>
					<Name><![CDATA[at_receive3]]></Name>
					<X>490</X><Y>700</Y>
					<Label><X>15</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 2;
checkWaitTime = 0;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444603065</Id>
					<Name><![CDATA[work_3]]></Name>
					<X>490</X><Y>780</Y>
					<Label><X>25</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[if (currentAreaTask.state != 3) {
	currentAreaTask.endTime = date();
	int length = 0;
	for (DeliveryOrder order : deliveryOrderList) {
		if (order.state != 3) {
			length++;
		}
	}
	double distance = main.map.getDistanceByRoute(startLonLat[1], startLonLat[0], currentAreaTask.endLatitude, currentAreaTask.endLongitude);
	double time = dateToTime(currentAreaTask.endTime) - dateToTime(currentAreaTask.startTime);
	this.totalDistance += distance;
	this.totalWorkTime += time;
	double cost = (distance / 1000.0 * main.distanceEnergyConsumption) / length + time * (main.laborRate + main.depreciationRate) / length;
	currentOrder.totalDistance += distance;
	currentOrder.totalCost += cost;
	Set<Integer> orderIdSet = new HashSet<>();
	for (AreaTask areaTask : type0TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type1TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type2TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type3TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3) {
			order.totalCost += cost;
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3 && orderIdSet.contains(order.id)) {
			order.totalDistance += distance;
		}
	}
}]]></EntryAction>
						<ExitAction><![CDATA[if (currentAreaTask.state != 3) {
	for (AreaTask areaTask : type3TaskList) {
		if (areaTask.customerId == currentAreaTask.customerId && areaTask.isGot == true) {
			areaTask.state = 3;
			areaTask.isGot = false;
			if (areaTask.startTime == null) {
				areaTask.startTime = date();
			}
			if (areaTask.endTime == null) {
				areaTask.endTime = date();
			}
			DeliveryOrder order = findOrderById(areaTask.orderId);
			order.state = 3;
			order.completionTime = areaTask.endTime;
			order.areaTaskList.get(areaTask.index - 1).state = 3;
			order.areaTaskList.get(areaTask.index - 1).isGot = false;
			this.usedPosition--;
		}
	}
	startLonLat = new double[]{this.getLongitude(), this.getLatitude()};
}
]]></ExitAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444625907</Id>
					<Name><![CDATA[moveTo_type_2]]></Name>
					<X>320</X><Y>620</Y>
					<Label><X>0</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 1;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444625909</Id>
					<Name><![CDATA[at_deliver2]]></Name>
					<X>320</X><Y>700</Y>
					<Label><X>20</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[currentAreaTask.state = 2;
checkWaitTime = 0;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1690444625911</Id>
					<Name><![CDATA[work_2]]></Name>
					<X>320</X><Y>780</Y>
					<Label><X>25</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[if ((currentAreaTask.state == 2 && currentAreaTask.isGot == true) && (currentOrder.areaTaskList.get(currentAreaTask.index + 1).state == 2 && currentOrder.areaTaskList.get(currentAreaTask.index + 1).isGot == false)) {
	// 当前车的成本计算
	currentAreaTask.endTime = date();
	int length = 0;
	for (DeliveryOrder order : deliveryOrderList) {
		if (order.state != 3) {
			length++;
		}
	}
	double distance = main.map.getDistanceByRoute(startLonLat[1], startLonLat[0], currentAreaTask.endLatitude, currentAreaTask.endLongitude);
	double time = dateToTime(currentAreaTask.endTime) - dateToTime(currentAreaTask.startTime);
	this.totalDistance += distance;
	this.totalWorkTime += time;
	double cost = (distance / 1000.0 * main.distanceEnergyConsumption) / length + time * (main.laborRate + main.depreciationRate) / length;
	currentOrder.totalDistance += distance;
	currentOrder.totalCost += cost;
	Set<Integer> orderIdSet = new HashSet<>();
	for (AreaTask areaTask : type0TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type1TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type2TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : type3TaskList) {
		if (!areaTask.equals(currentAreaTask) && areaTask.isGot == true && findOrderById(areaTask.orderId).state != 3) {
			orderIdSet.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3) {
			order.totalCost += cost;
		}
	}
	for (DeliveryOrder order : deliveryOrderList) {
		if (!order.equals(currentOrder) && order.state != 3 && orderIdSet.contains(order.id)) {
			order.totalDistance += distance;
		}
	}
	// 下一辆车的成本计算
	Truck afterTruck = main.trucks.get(currentOrder.areaTaskList.get(currentAreaTask.index + 1).truckId);
	afterTruck.currentAreaTask.endTime = date();
	int length_after = 0;
	for (DeliveryOrder order : afterTruck.deliveryOrderList) {
		if (order.state != 3) {
			length_after++;
		}
	}
	double distance_after = main.map.getDistanceByRoute(afterTruck.startLonLat[1], afterTruck.startLonLat[0], afterTruck.currentAreaTask.endLatitude, afterTruck.currentAreaTask.endLongitude);
	double time_after = dateToTime(afterTruck.currentAreaTask.endTime) - dateToTime(afterTruck.currentAreaTask.startTime);
	afterTruck.totalDistance += distance_after;
	afterTruck.totalWorkTime += time_after;
	double cost_after = (distance_after / 1000.0 * main.distanceEnergyConsumption) / length_after + time_after * (main.laborRate + main.depreciationRate) / length_after;
	afterTruck.currentOrder.totalDistance += distance_after;
	afterTruck.currentOrder.totalCost += cost_after;
	Set<Integer> orderIdSet_before = new HashSet<>();
	for (AreaTask areaTask : afterTruck.type0TaskList) {
		if (!areaTask.equals(afterTruck.currentAreaTask) && areaTask.isGot == true && afterTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : afterTruck.type1TaskList) {
		if (!areaTask.equals(afterTruck.currentAreaTask) && areaTask.isGot == true && afterTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : afterTruck.type2TaskList) {
		if (!areaTask.equals(afterTruck.currentAreaTask) && areaTask.isGot == true && afterTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (AreaTask areaTask : afterTruck.type3TaskList) {
		if (!areaTask.equals(afterTruck.currentAreaTask) && areaTask.isGot == true && afterTruck.findOrderById(areaTask.orderId).state != 3) {
			orderIdSet_before.add(areaTask.orderId);
		}
	}
	for (DeliveryOrder order : afterTruck.deliveryOrderList) {
		if (!order.equals(afterTruck.currentOrder) && order.state != 3) {
			order.totalCost += cost_after;
		}
	}
	for (DeliveryOrder order : afterTruck.deliveryOrderList) {
		if (!order.equals(afterTruck.currentOrder) && order.state != 3 && orderIdSet_before.contains(order.id)) {
			order.totalDistance += distance_after;
		}
	}
}]]></EntryAction>
						<ExitAction><![CDATA[// if (currentAreaTask.state != 3) {
if ((currentAreaTask.state == 2 && currentAreaTask.isGot == true) && (currentOrder.areaTaskList.get(currentAreaTask.index + 1).state == 2 && currentOrder.areaTaskList.get(currentAreaTask.index + 1).isGot == false)) {
	Truck exchangeTruck = main.trucks.get(currentOrder.areaTaskList.get(currentAreaTask.index + 1).truckId);
	ArrayList<AreaTask> areaTaskToDeliveryList = new ArrayList<AreaTask>();
	areaTaskToDeliveryList.add(currentAreaTask);
	for (AreaTask areaTask : type2TaskList) {
		AreaTask afterAreaTask = findOrderById(areaTask.orderId).areaTaskList.get(areaTask.index + 1);
		if (!areaTask.equals(currentAreaTask) && areaTask.state == 0 && areaTask.isGot == true && afterAreaTask.state == 0 && afterAreaTask.isGot == false && (afterAreaTask.truckId == -1 && afterAreaTask.areaId == exchangeTruck.areaId) || (afterAreaTask.truckId != -1 && afterAreaTask.truckId == exchangeTruck.id)) {
			areaTaskToDeliveryList.add(areaTask);
		}
	}
	ArrayList<AreaTask> areaTaskToReceiveList = new ArrayList<AreaTask>();
	for (AreaTask areaTask : type1TaskList) {
		AreaTask beforeAreaTask = findOrderById(areaTask.orderId).areaTaskList.get(areaTask.index - 1);
		if (areaTask.state == 0 && areaTask.isGot == false && beforeAreaTask.truckId == exchangeTruck.id && beforeAreaTask.state == 0 && beforeAreaTask.isGot == true) {
			areaTaskToReceiveList.add(areaTask);
		}
	}
	int areaTaskToReceiveNum = areaTaskToReceiveList.size();
	int areaTaskToDeliveryNum = areaTaskToDeliveryList.size();
	int areaTaskToReceiveExecutionNum = 0;
	int areaTaskToDeliveryExecutionNum = 0;
	if (areaTaskToReceiveNum - areaTaskToDeliveryNum > 0) {
		if (this.totalPosition - this.usedPosition >= areaTaskToReceiveNum - areaTaskToDeliveryNum) {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.usedPosition + areaTaskToReceiveNum - areaTaskToDeliveryNum;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition + areaTaskToDeliveryNum - areaTaskToReceiveNum;
		} else {
			areaTaskToReceiveExecutionNum = areaTaskToDeliveryNum + this.totalPosition - this.usedPosition;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.totalPosition;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition - this.totalPosition + this.usedPosition;
		}
	} else if (areaTaskToReceiveNum - areaTaskToDeliveryNum == 0) {
		areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
		areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
	} else if (areaTaskToReceiveNum - areaTaskToDeliveryNum < 0) {
		if (exchangeTruck.totalPosition - exchangeTruck.usedPosition >= areaTaskToDeliveryNum - areaTaskToReceiveNum) {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToDeliveryNum;
			this.usedPosition = this.usedPosition + areaTaskToReceiveNum - areaTaskToDeliveryNum;
			exchangeTruck.usedPosition = exchangeTruck.usedPosition + areaTaskToDeliveryNum - areaTaskToReceiveNum;
		} else {
			areaTaskToReceiveExecutionNum = areaTaskToReceiveNum;
			areaTaskToDeliveryExecutionNum = areaTaskToReceiveNum + exchangeTruck.totalPosition - exchangeTruck.usedPosition;
			this.usedPosition = this.usedPosition - exchangeTruck.totalPosition + exchangeTruck.usedPosition;
			exchangeTruck.usedPosition = exchangeTruck.totalPosition;
		}
	}
	for (int i = 0; i < areaTaskToReceiveExecutionNum; i++) {
		AreaTask areaTask = areaTaskToReceiveList.get(i);
		DeliveryOrder order = findOrderById(areaTask.orderId);
		if (areaTask.startTime == null) {
			areaTask.startTime = date();
		}
		if (areaTask.endTime == null) {
			areaTask.endTime = date();
		}
		areaTask.state = 3;
		areaTask.isGot = true;
		order.areaTaskList.get(areaTask.index + 1).state = 0;
		order.areaTaskList.get(areaTask.index + 1).isGot = true;
		order.areaTaskList.get(areaTask.index - 1).state = 3;
		order.areaTaskList.get(areaTask.index - 1).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 1).startTime == null) {
			order.areaTaskList.get(areaTask.index - 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 1).endTime == null) {
			order.areaTaskList.get(areaTask.index - 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index - 2).state = 3;
		order.areaTaskList.get(areaTask.index - 2).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 2).startTime == null) {
			order.areaTaskList.get(areaTask.index - 2).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 2).endTime == null) {
			order.areaTaskList.get(areaTask.index - 2).endTime = date();
		}
	}
	for (int i = 0; i < areaTaskToDeliveryExecutionNum; i++) {
		AreaTask areaTask = areaTaskToDeliveryList.get(i);
		DeliveryOrder order = findOrderById(areaTask.orderId);
		if (areaTask.startTime == null) {
			areaTask.startTime = date();
		}
		if (areaTask.endTime == null) {
			areaTask.endTime = date();
		}
		areaTask.state = 3;
		areaTask.isGot = false;
		order.areaTaskList.get(areaTask.index - 1).state = 3;
		order.areaTaskList.get(areaTask.index - 1).isGot = false;
		if (order.areaTaskList.get(areaTask.index - 1).startTime == null) {
			order.areaTaskList.get(areaTask.index - 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index - 1).endTime == null) {
			order.areaTaskList.get(areaTask.index - 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index + 1).state = 3;
		order.areaTaskList.get(areaTask.index + 1).isGot = true;
		if (order.areaTaskList.get(areaTask.index + 1).startTime == null) {
			order.areaTaskList.get(areaTask.index + 1).startTime = date();
		}
		if (order.areaTaskList.get(areaTask.index + 1).endTime == null) {
			order.areaTaskList.get(areaTask.index + 1).endTime = date();
		}
		order.areaTaskList.get(areaTask.index + 2).state = 0;
		order.areaTaskList.get(areaTask.index + 2).isGot = true;
		if (order.areaTaskList.get(areaTask.index + 1).truckId == -1) {
			order.areaTaskList.get(areaTask.index + 1).truckId = exchangeTruck.id;
			order.areaTaskList.get(areaTask.index + 2).truckId = exchangeTruck.id;
			send(order, exchangeTruck);
		}
	}
	startLonLat = new double[]{this.getLongitude(), this.getLatitude()};
} else {
	// System.out.println("==========work_2异常 START==========");
	// System.out.println("truckId:" + this.id);
	// System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	// System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	// System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	// System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	// System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	// System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	// System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).index:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).index);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).orderId:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).orderId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).areaId:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).areaId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).truckId:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).truckId);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).type:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).type);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).state:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).state);
	// System.out.println("currentOrder.areaTaskList.get(currentAreaTask.index + 1).isGot:" + currentOrder.areaTaskList.get(currentAreaTask.index + 1).isGot);
	// System.out.println("==========work_2异常 END==========");
}]]></ExitAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="EntryPoint" ParentState="ROOT_NODE">
					<Id>1690443695251</Id>
					<Name><![CDATA[statechart]]></Name>
					<X>620</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
					</Points>
					<Properties Target="1690443695227">
						<Action><![CDATA[currentArea = main.area.get(this.areaId);]]></Action>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695253</Id>
					<Name><![CDATA[transition16]]></Name>
					<X>620</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695227" Target="1690443695229" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[type0TaskList.size() > 0 || type1TaskList.size() > 0 || type2TaskList.size() > 0 || type2TaskResponseList.size() > 0 || type3TaskList.size() > 0]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[DeliveryOrder]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="stillness" ParentStateId="1690443695227">
					<Id>1690443695255</Id>
					<Name><![CDATA[transition17]]></Name>
					<X>660</X><Y>450</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-16</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>12.0</IconOffset>
					<Properties Source="1690443695227" Target="1690443695227" Trigger="timeout">
						<Action><![CDATA[if (main.startFlag) {
	totalWaitTime++;
}
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695257</Id>
					<Name><![CDATA[transition18]]></Name>
					<X>620</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695229" Target="1690443695231" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.type != 2 || (currentAreaTask.type == 2 && type2TaskResponseList.contains(currentAreaTask))]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695259</Id>
					<Name><![CDATA[transition19]]></Name>
					<X>608</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-388</X><Y>0</Y></Point>
						<Point><X>-388</X><Y>30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690443695233" Trigger="condition">
						<Action><![CDATA[moveTo(currentAreaTask.endLatitude, currentAreaTask.endLongitude);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.type == 1 && currentAreaTask.state == 0 && currentAreaTask.isGot == false]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695261</Id>
					<Name><![CDATA[transition20]]></Name>
					<X>220</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695233" Target="1690443695235" Trigger="arrival">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="at_receive1" ParentStateId="1690443695235">
					<Id>1690443695263</Id>
					<Name><![CDATA[transition21]]></Name>
					<X>260</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-20</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695235" Target="1690443695235" Trigger="timeout">
						<Action><![CDATA[checkWaitTime++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695265</Id>
					<Name><![CDATA[transition22]]></Name>
					<X>220</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695235" Target="1690443695237" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentOrder.areaTaskList.get(currentAreaTask.index - 1) != null && currentOrder.areaTaskList.get(currentAreaTask.index - 1).truckId != -1 && currentOrder.areaTaskList.get(currentAreaTask.index - 1).state >= 2]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[AreaTask]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695267</Id>
					<Name><![CDATA[transition23]]></Name>
					<X>220</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>70</Y></Point>
						<Point><X>670</X><Y>70</Y></Point>
						<Point><X>670</X><Y>10</Y></Point>
					</Points>
					<IconOffset>30.0</IconOffset>
					<Properties Source="1690443695237" Target="1690443695241" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[10]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695271</Id>
					<Name><![CDATA[transition25]]></Name>
					<X>890</X><Y>800</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>-280</Y></Point>
						<Point><X>-220</X><Y>-280</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695241" Target="1690443695229" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[type0TaskList.size() > 0 || type1TaskList.size() > 0 || type2TaskList.size() > 0 || type2TaskResponseList.size() > 0 || type3TaskList.size() > 0]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695273</Id>
					<Name><![CDATA[transition26]]></Name>
					<X>902</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>58</X><Y>0</Y></Point>
						<Point><X>58</X><Y>-370</Y></Point>
						<Point><X>-232</X><Y>-370</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695241" Target="1690443695227" Trigger="timeout">
						<Action><![CDATA[// moveTo(currentArea.latitude,currentArea.longitude);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695275</Id>
					<Name><![CDATA[transition27]]></Name>
					<X>608</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-538</X><Y>0</Y></Point>
						<Point><X>-538</X><Y>30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690443695243" Trigger="timeout">
						<Action><![CDATA[moveTo(currentAreaTask.endLatitude, currentAreaTask.endLongitude);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.type == 0 && currentAreaTask.state == 0 && currentAreaTask.isGot == false]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695285</Id>
					<Name><![CDATA[transition28]]></Name>
					<X>70</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695243" Target="1690443695245" Trigger="arrival">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="at_deliver0" ParentStateId="1690443695245">
					<Id>1690443695287</Id>
					<Name><![CDATA[transition29]]></Name>
					<X>110</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-20</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695245" Target="1690443695245" Trigger="timeout">
						<Action><![CDATA[if (checkWaitTime >= 100) {
	System.out.println("==========异常START==========");
	System.out.println("truckId:" + this.id);
	System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	System.out.println("==========Order START==========");
	DeliveryOrder order = findOrderById(currentAreaTask.orderId);
	System.out.println("order.id:" + order.id);
	System.out.println("order.state:" + order.state);
	System.out.println("==========Order END==========");
	System.out.println("==========areaTaskList START==========");

	for (AreaTask areaTask : order.areaTaskList) {
		System.out.println("areaTask.index:" + areaTask.index);
		System.out.println("areaTask.orderId:" + areaTask.orderId);
		System.out.println("areaTask.areaId:" + areaTask.areaId);
		System.out.println("areaTask.truckId:" + areaTask.truckId);
		System.out.println("areaTask.type:" + areaTask.type);
		System.out.println("areaTask.state:" + areaTask.state);
		System.out.println("areaTask.isGot:" + areaTask.isGot);
	}
	System.out.println("==========areaTaskList END==========");

	System.out.println("==========异常END==========");
}
checkWaitTime++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695289</Id>
					<Name><![CDATA[transition30]]></Name>
					<X>70</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695245" Target="1690443695247" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695291</Id>
					<Name><![CDATA[transition31]]></Name>
					<X>70</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>70</Y></Point>
						<Point><X>820</X><Y>70</Y></Point>
						<Point><X>820</X><Y>10</Y></Point>
					</Points>
					<IconOffset>30.0</IconOffset>
					<Properties Source="1690443695247" Target="1690443695241" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690443695294</Id>
					<Name><![CDATA[transition32]]></Name>
					<X>632</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>118</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690443695249" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444572334</Id>
					<Name><![CDATA[transition33]]></Name>
					<X>608</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-238</X><Y>0</Y></Point>
						<Point><X>-238</X><Y>30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690444625907" Trigger="timeout">
						<Action><![CDATA[moveTo(currentAreaTask.endLatitude, currentAreaTask.endLongitude);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.type == 2 && currentAreaTask.state == 0 && currentAreaTask.isGot == true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444603067</Id>
					<Name><![CDATA[transition34]]></Name>
					<X>540</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690444603061" Target="1690444603063" Trigger="arrival">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="at_receive3" ParentStateId="1690444603063">
					<Id>1690444603069</Id>
					<Name><![CDATA[transition35]]></Name>
					<X>580</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-20</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690444603063" Target="1690444603063" Trigger="timeout">
						<Action><![CDATA[if (checkWaitTime >= 100) {
	System.out.println("==========异常START==========");
	System.out.println("truckId:" + this.id);
	System.out.println("currentAreaTask.index:" + currentAreaTask.index);
	System.out.println("currentAreaTask.orderId:" + currentAreaTask.orderId);
	System.out.println("currentAreaTask.areaId:" + currentAreaTask.areaId);
	System.out.println("currentAreaTask.truckId:" + currentAreaTask.truckId);
	System.out.println("currentAreaTask.type:" + currentAreaTask.type);
	System.out.println("currentAreaTask.state:" + currentAreaTask.state);
	System.out.println("currentAreaTask.isGot:" + currentAreaTask.isGot);
	System.out.println("==========Order START==========");
	DeliveryOrder order = findOrderById(currentAreaTask.orderId);
	System.out.println("order.id:" + order.id);
	System.out.println("order.state:" + order.state);
	System.out.println("==========Order END==========");
	System.out.println("==========areaTaskList START==========");

	for (AreaTask areaTask : order.areaTaskList) {
		System.out.println("areaTask.index:" + areaTask.index);
		System.out.println("areaTask.orderId:" + areaTask.orderId);
		System.out.println("areaTask.areaId:" + areaTask.areaId);
		System.out.println("areaTask.truckId:" + areaTask.truckId);
		System.out.println("areaTask.type:" + areaTask.type);
		System.out.println("areaTask.state:" + areaTask.state);
		System.out.println("areaTask.isGot:" + areaTask.isGot);
	}
	System.out.println("==========areaTaskList END==========");

	System.out.println("==========异常END==========");
}
checkWaitTime++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444603071</Id>
					<Name><![CDATA[transition36]]></Name>
					<X>540</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>24.0</IconOffset>
					<Properties Source="1690444603063" Target="1690444603065" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444625913</Id>
					<Name><![CDATA[transition37]]></Name>
					<X>370</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690444625907" Target="1690444625909" Trigger="arrival">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="at_deliver2" ParentStateId="1690444625909">
					<Id>1690444625915</Id>
					<Name><![CDATA[transition38]]></Name>
					<X>410</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-20</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690444625909" Target="1690444625909" Trigger="timeout">
						<Action><![CDATA[checkWaitTime++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444625917</Id>
					<Name><![CDATA[transition39]]></Name>
					<X>370</X><Y>730</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>23.0</IconOffset>
					<Properties Source="1690444625909" Target="1690444625911" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentOrder.areaTaskList.get(currentAreaTask.index + 1) != null && currentOrder.areaTaskList.get(currentAreaTask.index + 1).truckId != -1 && currentOrder.areaTaskList.get(currentAreaTask.index + 1).state >= 2]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444709447</Id>
					<Name><![CDATA[transition40]]></Name>
					<X>608</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-68</X><Y>0</Y></Point>
						<Point><X>-68</X><Y>30</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690444603061" Trigger="timeout">
						<Action><![CDATA[moveTo(currentAreaTask.endLatitude, currentAreaTask.endLongitude);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.type == 3 && currentAreaTask.state == 0 && currentAreaTask.isGot == true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444719739</Id>
					<Name><![CDATA[transition41]]></Name>
					<X>370</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>70</Y></Point>
						<Point><X>520</X><Y>70</Y></Point>
						<Point><X>520</X><Y>10</Y></Point>
					</Points>
					<IconOffset>30.0</IconOffset>
					<Properties Source="1690444625911" Target="1690443695241" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[10]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1690444742219</Id>
					<Name><![CDATA[transition42]]></Name>
					<X>540</X><Y>810</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>70</Y></Point>
						<Point><X>350</X><Y>70</Y></Point>
						<Point><X>350</X><Y>10</Y></Point>
					</Points>
					<IconOffset>30.0</IconOffset>
					<Properties Source="1690444603065" Target="1690443695241" Trigger="condition">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[5]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1691045603814</Id>
					<Name><![CDATA[transition]]></Name>
					<X>632</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>246</X><Y>220</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1690443695231" Target="1690443695241" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[currentAreaTask.state == 3]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1692088290440</Id>
					<Name><![CDATA[transition1]]></Name>
					<X>420</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>30</X><Y>0</Y></Point>
						<Point><X>30</X><Y>-60</Y></Point>
						<Point><X>30</X><Y>-200</Y></Point>
						<Point><X>150</X><Y>-200</Y></Point>
					</Points>
					<IconOffset>180.0</IconOffset>
					<Properties Source="1690444625909" Target="1690443695229" Trigger="condition">
						<Action><![CDATA[currentAreaTask.state = 0;
type2TaskList.remove(currentAreaTask);
type2TaskList.add(1, currentAreaTask);
System.out.println("==========type2 异常处理==========");]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[checkWaitTime >= 1440]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1692088573711</Id>
					<Name><![CDATA[transition2]]></Name>
					<X>270</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>30</X><Y>0</Y></Point>
						<Point><X>30</X><Y>-50</Y></Point>
						<Point><X>30</X><Y>-210</Y></Point>
						<Point><X>300</X><Y>-210</Y></Point>
					</Points>
					<IconOffset>180.0</IconOffset>
					<Properties Source="1690443695235" Target="1690443695229" Trigger="condition">
						<Action><![CDATA[currentAreaTask.state = 0;
type1TaskList.remove(currentAreaTask);
type1TaskList.add(1, currentAreaTask);
System.out.println("==========type1 异常处理==========");]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[checkWaitTime >= 1440]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ready_for_mission" ParentStateId="1690443695229">
					<Id>1692672817666</Id>
					<Name><![CDATA[transition24]]></Name>
					<X>660</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-16</X><Y>-30</Y></Point>
					</Points>
					<IconOffset>12.0</IconOffset>
					<Properties Source="1690443695229" Target="1690443695229" Trigger="timeout">
						<Action><![CDATA[if (main.startFlag) {
	totalWaitTime++;
}
]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
			</StatechartElements>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1686299125396</Id>
					<Name><![CDATA[findTaskByTruckId]]></Name>
					<X>10</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[list]]></Name>
						<Type><![CDATA[ArrayList<Object[]>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[id]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[for (int i = 0; i < list.size(); i++) {
	if (list.get(i)[2].equals(id)) {
		return i; // 找到目标元素，返回索引位置
	}
}
return -1; // 未找到目标元素，返回 -1]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[DeliveryOrder]]></ReturnType>
					<Id>1690961576737</Id>
					<Name><![CDATA[findOrderById]]></Name>
					<X>10</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[orderId]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[for (DeliveryOrder order : deliveryOrderList) {
	if (order.id == orderId) {
		return order;
	}
}
return null;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1685931320933</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<OnReceive><![CDATA[for (int i = 0; i < msg.areaTaskList.size(); i = i + 2) {
	if (msg.areaTaskList.get(i).truckId == this.id) {
		AreaTask task1 = msg.areaTaskList.get(i);
		if (task1.type == 0 && task1.state == 0) {
			type0TaskList.add(task1);
		} else if (task1.type == 1 && task1.state == 0) {
			type1TaskList.add(task1);
		} else if (task1.type == 2 && task1.state == 0) {
			type2TaskList.add(task1);
		} else if (task1.type == 3 && task1.state == 0) {
			type3TaskList.add(task1);
		}
		AreaTask task2 = msg.areaTaskList.get(i + 1);
		if (task2.type == 0 && task2.state == 0) {
			type0TaskList.add(task2);
		} else if (task2.type == 1 && task2.state == 0) {
			type1TaskList.add(task2);
		} else if (task2.type == 2 && task2.state == 0) {
			type2TaskList.add(task2);
		} else if (task2.type == 3 && task2.state == 0) {
			type3TaskList.add(task2);
		}
	}
}
deliveryOrderList.add(msg);]]></OnReceive>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[DeliveryOrder]]></MessageType>
					<StatechartReference>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Truck]]></ClassName>
						<ItemName><![CDATA[statechart]]></ItemName>
					</StatechartReference>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
				<AgentLink>
					<Id>1692585360423</Id>
					<Name><![CDATA[truckLink]]></Name>
					<X>200</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<OnReceive><![CDATA[currentMsg = msg;
type2TaskList.remove(currentMsg);
type2TaskResponseList.add(currentMsg);]]></OnReceive>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentReferenceId>1685931320932</AgentReferenceId>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<BidirectionalPeerId>1692585360423</BidirectionalPeerId>
					<MessageType><![CDATA[AreaTask]]></MessageType>
					<StatechartReference>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Truck]]></ClassName>
						<ItemName><![CDATA[statechart]]></ItemName>
					</StatechartReference>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1685931329872</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1685931320939</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1685931320942</Id>
					<Name><![CDATA[lorry]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>4.652</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Rectangle>
					<Id>1685931320944</Id>
					<Name><![CDATA[_ps86]]></Name>
					<X>6.047</X><Y>-2.82</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>0.931</Width>
					<Height>5.993</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-12566464</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Curve ControlPoints="true">
					<Id>1685931320946</Id>
					<Name><![CDATA[_ps87]]></Name>
					<X>12.095</X><Y>-3.172</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-13284514</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>0.706</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>1.058</Y><Z>0</Z></Point>
					   <Point><X>-0.466</X><Y>0.352</Y><Z>0</Z></Point>
					   <Point><X>-0.931</X><Y>-0.352</Y><Z>0</Z></Point>
					   <Point><X>-0.466</X><Y>-0.704</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1685931320948</Id>
					<Name><![CDATA[_ps88]]></Name>
					<X>12.095</X><Y>3.524</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-13284514</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-0.466</X><Y>0.706</Y><Z>0</Z></Point>
					   <Point><X>-0.931</X><Y>0.352</Y><Z>0</Z></Point>
					   <Point><X>-0.466</X><Y>-0.352</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-1.058</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>-0.704</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1685931320950</Id>
					<Name><![CDATA[_ps89]]></Name>
					<X>6.976</X><Y>-2.82</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-13284514</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-12156236</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>5.584</X><Y>5.993</Y><Z>0</Z></Point>
					   <Point><X>6.047</X><Y>5.641</Y><Z>0</Z></Point>
					   <Point><X>6.976</X><Y>4.937</Y><Z>0</Z></Point>
					   <Point><X>6.976</X><Y>1.058</Y><Z>0</Z></Point>
					   <Point><X>6.047</X><Y>0.352</Y><Z>0</Z></Point>
					   <Point><X>5.584</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4.652</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<RoundedRectangle>
					<Id>1685931320952</Id>
					<Name><![CDATA[_ps90]]></Name>
					<X>7.444</X><Y>-2.114</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>4.187</Width>
					<Height>4.585</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-9066808</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>1</ArcRadius>
				</RoundedRectangle>
				<Rectangle>
					<Id>1685931320954</Id>
					<Name><![CDATA[_ps91]]></Name>
					<X>-13.492</X><Y>-2.82</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>0.931</Width>
					<Height>5.993</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-12566464</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Rectangle>
					<Id>1685931320956</Id>
					<Name><![CDATA[_ps92]]></Name>
					<X>-12.56</X><Y>-3.172</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>19.073</Width>
					<Height>6.697</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-4144960</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<RoundedRectangle>
					<Id>1685931320958</Id>
					<Name><![CDATA[_ps93]]></Name>
					<X>-12.095</X><Y>-2.466</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>18.144</Width>
					<Height>5.289</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<ArcRadius>1</ArcRadius>
				</RoundedRectangle>
				<Curve ControlPoints="true">
					<Id>1685931320960</Id>
					<Name><![CDATA[_ps94]]></Name>
					<X>11.629</X><Y>2.82</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-13421226</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0.931</X><Y>-0.704</Y><Z>0</Z></Point>
					   <Point><X>0.931</X><Y>-0.704</Y><Z>0</Z></Point>
					   <Point><X>1.395</X><Y>-1.058</Y><Z>0</Z></Point>
					   <Point><X>1.395</X><Y>-2.466</Y><Z>0</Z></Point>
					   <Point><X>1.395</X><Y>-3.879</Y><Z>0</Z></Point>
					   <Point><X>0.931</X><Y>-4.583</Y><Z>0</Z></Point>
					   <Point><X>0.931</X><Y>-4.583</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>-5.287</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-5.287</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-5.287</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-5.287</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>-3.879</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>-2.466</Y><Z>0</Z></Point>
					   <Point><X>0.466</X><Y>-1.058</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
			</Presentation>

				</Group>
				<Text>
					<Id>1692348720892</Id>
					<Name><![CDATA[text]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16744448</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[id]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1685949395882</Id>
			<Name><![CDATA[DeliveryOrder]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1685949395888</Id>
				<Name><![CDATA[1685949395888]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1685952000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1685949395885</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1685949395889</CurrentLevel>
			<ConnectionsId>1685949395883</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1686118583713</Id>
					<Name><![CDATA[supermarket_new_coordinate]]></Name>
					<X>160</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686118620490</Id>
					<Name><![CDATA[customer_new_coordinate]]></Name>
					<X>160</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1686276026271</Id>
					<Name><![CDATA[truckList]]></Name>
					<X>360</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<Truck>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<Truck>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690253937851</Id>
					<Name><![CDATA[areaList]]></Name>
					<X>360</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<Area>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<Area>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690256603701</Id>
					<Name><![CDATA[areaTaskList]]></Name>
					<X>360</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<AreaTask>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<AreaTask>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395891</Id>
					<Name><![CDATA[id]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690256471022</Id>
					<Name><![CDATA[supermarketId]]></Name>
					<X>10</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690256471020</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1686020775006</Id>
					<Name><![CDATA[customerId]]></Name>
					<X>10</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1686020775004</Id>
							<Label><![CDATA[customerId]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395899</Id>
					<Name><![CDATA[startLongitude]]></Name>
					<X>10</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395901</Id>
					<Name><![CDATA[startLatitude]]></Name>
					<X>10</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690268971654</Id>
					<Name><![CDATA[endLongitude]]></Name>
					<X>10</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690268971652</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690268971660</Id>
					<Name><![CDATA[endLatitude]]></Name>
					<X>10</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690268971658</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395909</Id>
					<Name><![CDATA[state]]></Name>
					<Description><![CDATA[0:生成订单；1：已被接单但未取货；2：已被取货但未送达；3：表示已被送达。]]></Description>
					<X>10</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395893</Id>
					<Name><![CDATA[creationTime]]></Name>
					<X>10</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Date]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395905</Id>
					<Name><![CDATA[completionTime]]></Name>
					<X>10</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Date]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395903</Id>
					<Name><![CDATA[totalDistance]]></Name>
					<X>10</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1685949395907</Id>
					<Name><![CDATA[totalCost]]></Name>
					<X>10</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1686123698347</Id>
					<Name><![CDATA[truck_new_coordinate_list]]></Name>
					<X>160</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[double[]]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1690184338148</Id>
					<Name><![CDATA[area_new_coordinate_list]]></Name>
					<X>160</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[double[]]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1685949395883</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1685949395889</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1690179598723</Id>
			<Name><![CDATA[Area]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1690179598729</Id>
				<Name><![CDATA[1690179598729]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1690185600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1690179598726</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1690179598730</CurrentLevel>
			<ConnectionsId>1690179598724</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1690181942635</Id>
					<Name><![CDATA[area_mercator]]></Name>
					<X>210</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double[]]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1690352657195</Id>
					<Name><![CDATA[truckList]]></Name>
					<X>210</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[ArrayList<Truck>]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[new ArrayList<Truck>()]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598732</Id>
					<Name><![CDATA[id]]></Name>
					<X>60</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598734</Id>
					<Name><![CDATA[administrativeDistrict]]></Name>
					<X>60</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598736</Id>
					<Name><![CDATA[street]]></Name>
					<X>60</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[String]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598738</Id>
					<Name><![CDATA[longitude]]></Name>
					<X>60</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598740</Id>
					<Name><![CDATA[latitude]]></Name>
					<X>60</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598742</Id>
					<Name><![CDATA[type]]></Name>
					<X>60</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598744</Id>
					<Name><![CDATA[activityRadius]]></Name>
					<X>60</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690179598746</Id>
					<Name><![CDATA[velocity]]></Name>
					<X>60</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>0</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1690356532290</Id>
					<Name><![CDATA[pendingOrderList]]></Name>
					<X>210</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[DeliveryOrder]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1690356572352</Id>
					<Name><![CDATA[deliveryOrderList]]></Name>
					<X>210</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[DeliveryOrder]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Events>
				<Event>
					<Id>1691043424146</Id>
					<Name><![CDATA[processOrder]]></Name>
					<X>50</X><Y>-10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties TriggerType="timeout" Mode="cyclic">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_MINUTE]]></Unit>
						</Rate>
						<OccurrenceAtTime>true</OccurrenceAtTime>
						<OccurrenceDate>1691049600000</OccurrenceDate>
						<OccurrenceTime Class="CodeUnitValue">
							<Code><![CDATA[0]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</OccurrenceTime>
						<RecurrenceCode Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</RecurrenceCode>
						<Condition><![CDATA[pendingOrderList]]></Condition>
					</Properties>
					<Action><![CDATA[if (pendingOrderList.size() > 0) {
	ArrayList<DeliveryOrder> removeAllList = new ArrayList<DeliveryOrder>();
	for (DeliveryOrder order : pendingOrderList) {
		for (int i = 0; i < order.areaTaskList.size(); i = i + 2) {
			if (order.areaTaskList.get(i).areaId == this.id) {
				AreaTask task1 = order.areaTaskList.get(i);
				AreaTask task2 = order.areaTaskList.get(i + 1);
				int maxPosition = 0;
				int truckId = -1;
				for (Truck truck : this.truckList) {
					if (truck.totalPosition - truck.usedPosition > maxPosition) {
						maxPosition = truck.totalPosition - truck.usedPosition;
						truckId = truck.id;
					}
				}
				if (truckId != -1) {
					Truck truck = main.trucks.get(truckId);
					if (truck.totalPosition - truck.usedPosition > 0) {
						task1.truckId = truckId;
						task2.truckId = truckId;
						if (task1.index == 0) {
							// System.out.println("truck.id: "+truck.id);
							// System.out.println("truck.areaId: "+truck.areaId);
							truck.usedPosition++;
							// System.out.println("truck.usedPosition: "+truck.usedPosition);
							// System.out.println("order.id: "+ order.id);
						}
						removeAllList.add(order);
						if (order.state == 0) {
							order.state = 1;
						}
						send(order, truck);
					}
				}
				break;
			}
		}
	}
	pendingOrderList.removeAll(removeAllList);
}]]></Action>
				</Event>
			</Events>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[Truck]]></ReturnType>
					<Id>1690963572579</Id>
					<Name><![CDATA[findTruckById]]></Name>
					<X>60</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[truckId]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[for (Truck truck : truckList) {
	if (truck.id == truckId) {
		return truck;
	}
}
return null;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1690179598724</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<OnReceive><![CDATA[deliveryOrderList.add(msg);
pendingOrderList.add(msg);
// ArrayList<DeliveryOrder> removeAllList = new ArrayList<DeliveryOrder>();
// for (DeliveryOrder order : pendingOrderList) {
// for (int i = 0; i < order.areaTaskList.size(); i = i + 2) {
// if (order.areaTaskList.get(i).areaId == this.id) {
// AreaTask task1 = msg.areaTaskList.get(i);
// AreaTask task2 = msg.areaTaskList.get(i + 1);
// int maxPosition = -1;
// int truckId = -1;
// for (Truck truck : this.truckList) {
// if (truck.totalPosition - truck.usedPosition > maxPosition) {
// maxPosition = truck.totalPosition - truck.usedPosition;
// truckId = truck.id;
// }
// }
// if (maxPosition > 0 && truckId != -1) {
// task1.truckId = truckId;
// task2.truckId = truckId;
// Truck truck = main.truck.get(truckId);
// truck.usedPosition++;
// removeAllList.add(order);
// if (order.state == 0) {
// order.state = 1;
// }
// send(order, truck);
// }
// break;
// }
// }
// }
// pendingOrderList.removeAll(removeAllList);]]></OnReceive>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[DeliveryOrder]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1690179656208</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1690179598730</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Text>
					<Id>1692155087606</Id>
					<Name><![CDATA[text]]></Name>
					<X>-10</X><Y>-10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-65536</Color>
					<Text><![CDATA[text]]></Text>
					<TextCode><![CDATA[this.id]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>16</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1690186359542</Id>
			<Name><![CDATA[AreaNodE]]></Name>
			<Implements><![CDATA[Comparable<AreaNodE>]]></Implements>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1690186359537</Id>
				<Name><![CDATA[1690186359537]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1688976000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1690186359538</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1690186359546</CurrentLevel>
			<ConnectionsId>1690186359566</ConnectionsId>
			<Variables>
				<Variable Class="Parameter">
					<Id>1690186359549</Id>
					<Name><![CDATA[id]]></Name>
					<X>50</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359547</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690186359552</Id>
					<Name><![CDATA[x]]></Name>
					<X>50</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359550</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690186359555</Id>
					<Name><![CDATA[y]]></Name>
					<X>50</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359553</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690186359558</Id>
					<Name><![CDATA[type]]></Name>
					<X>50</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359556</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690186359561</Id>
					<Name><![CDATA[radius]]></Name>
					<X>50</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359559</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690186359564</Id>
					<Name><![CDATA[distance]]></Name>
					<X>50</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690186359562</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="public" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[int]]></ReturnType>
					<Id>1690186359544</Id>
					<Name><![CDATA[compareTo]]></Name>
					<X>50</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[other]]></Name>
						<Type><![CDATA[AreaNodE]]></Type>
					</Parameter>
					<Body><![CDATA[return Double.compare(this.distance, other.distance);]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1690186359566</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1690186359546</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1690254112630</Id>
			<Name><![CDATA[AreaTask]]></Name>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1690254112625</Id>
				<Name><![CDATA[1690254112625]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[泛型参数：]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1687334400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1690254112626</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1690254112632</CurrentLevel>
			<ConnectionsId>1690254112676</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1692585925294</Id>
					<Name><![CDATA[msg]]></Name>
					<X>200</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112635</Id>
					<Name><![CDATA[index]]></Name>
					<X>60</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112633</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112638</Id>
					<Name><![CDATA[orderId]]></Name>
					<X>60</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112636</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254183538</Id>
					<Name><![CDATA[supermarketId]]></Name>
					<X>60</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254183536</Id>
							<Label><![CDATA[supermarketId]]></Label>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112641</Id>
					<Name><![CDATA[customerId]]></Name>
					<X>60</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112639</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690270623130</Id>
					<Name><![CDATA[areaId]]></Name>
					<X>60</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690270623128</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112644</Id>
					<Name><![CDATA[truckId]]></Name>
					<X>60</X><Y>140</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112642</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254291757</Id>
					<Name><![CDATA[endLongitude]]></Name>
					<X>60</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254291755</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254304066</Id>
					<Name><![CDATA[endLatitude]]></Name>
					<X>60</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254304064</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112656</Id>
					<Name><![CDATA[type]]></Name>
					<X>60</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112654</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112659</Id>
					<Name><![CDATA[state]]></Name>
					<X>60</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112657</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112662</Id>
					<Name><![CDATA[isGot]]></Name>
					<X>60</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1690254112660</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112665</Id>
					<Name><![CDATA[startTime]]></Name>
					<X>60</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Date]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112663</Id>
							<Label><![CDATA[startTime]]></Label>
							<EditorContolType>CALENDAR</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112668</Id>
					<Name><![CDATA[endTime]]></Name>
					<X>60</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[Date]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<ParameterEditor>
							<Id>1690254112666</Id>
							<Label><![CDATA[endTime]]></Label>
							<EditorContolType>CALENDAR</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112671</Id>
					<Name><![CDATA[distance]]></Name>
					<X>60</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<UnitOfValue Class="LengthUnits"><![CDATA[METER]]></UnitOfValue>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1690254112669</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1690254112674</Id>
					<Name><![CDATA[cost]]></Name>
					<X>60</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1690254112672</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1690254112676</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1690254112632</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>	
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
	<FixedTimeStep>0.001</FixedTimeStep>
	<RelativeAccuracy>1.0E-5</RelativeAccuracy>
	<TimeAccuracy>1.0E-5</TimeAccuracy>
	<Frame>
		<Width>1000</Width>
		<Height>600</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
		</ImportSettings>
		<ExportSettings>
			<ExportExcelResourceReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[C:/Users/lvsy/Desktop/customer未优化.xlsx]]></ClassName>
			</ExportExcelResourceReference>
			<TableReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[administrative_district]]></ClassName>
			</TableReference>
			<TableReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[area]]></ClassName>
			</TableReference>
			<TableReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[customer]]></ClassName>
			</TableReference>
			<TableReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[supermarket]]></ClassName>
			</TableReference>
			<TableReference>
				<PackageName><![CDATA[gis_combined_transportation_v4]]></PackageName>
				<ClassName><![CDATA[truck]]></ClassName>
			</TableReference>
		</ExportSettings>
	</Database>
	
	<RunConfiguration ActiveObjectClassId="1685604887149">
		<Id>1685604887165</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>16384</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified time]]></StopOption>
			<InitialDate><![CDATA[1688371200000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1688377200000]]></FinalDate>	
			<FinalTime><![CDATA[100.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>true</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>1.0</RealTimeScale>
			<EnableZoomAndPanning>true</EnableZoomAndPanning>
			<EnableDeveloperPanel>false</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1685604887149">
			<Id>1685604887162</Id>
			<Name><![CDATA[Simulation]]></Name>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>16384</MaximumMemory>
			<RandomNumberGenerationType>randomSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>

			<Presentation>
				<Text>
					<Id>1685604887164</Id>
					<Name><![CDATA[text]]></Name>
					<X>50</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12490271</Color>
					<Text><![CDATA[GIS-Combined-Transportation-V5]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>24</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[GIS-Combined-Transportation-V5 : Simulation]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Never]]></StopOption>
				<InitialDate><![CDATA[1688371200000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1688169600000]]></FinalDate>	
				<FinalTime><![CDATA[100.0]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>true</BypassInitialScreen>
		</SimulationExperiment>	
	</Experiments>
	<ModelResources>
		<Resource>
			<Path><![CDATA[result.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
		</Resource>
		<Resource>
			<Path><![CDATA[C:/Users/lvsy/Desktop/customer未优化.xlsx]]></Path>
			<ReferencedFromUserCode>false</ReferencedFromUserCode>
		</Resource>
	</ModelResources>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.processmodeling]]></LibraryName>
		<VersionMajor>8</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>5</VersionBuild>
    </RequiredLibraryReference>
</Model>
</AnyLogicWorkspace>